{"ast":null,"code":"import { createSelector, createEntityAdapter } from \"@reduxjs/toolkit\";\nimport { apiSlice } from './api';\nconst ordersAdapter = createEntityAdapter({\n  sortComparer: (a, b) => a.id.localeCompare(b.id)\n});\nconst initialState = ordersAdapter.getInitialState();\nexport const ordersApiSlice = apiSlice.injectEndpoints({\n  endpoints: builder => ({\n    getOrders: builder.query({\n      query: () => '/orders',\n      transformResponse: responseData => {\n        return ordersAdapter.setAll(initialState, responseData);\n      },\n      providesTags: {\n        type: 'Orders',\n        id: \"LIST\"\n      }\n    }),\n    addOrder: builder.mutation({\n      query: itemToAdd => ({\n        url: '/orders',\n        method: 'POST',\n        body: itemToAdd\n      }),\n      invalidatesTags: [{\n        type: 'Orders',\n        id: \"LIST\"\n      }]\n    })\n  })\n});\nexport const {\n  useGetOrdersQuery,\n  useAddOrderMutation\n} = ordersApiSlice;\nexport const selectOrdersResult = ordersApiSlice.endpoints.getOrders.select();\nconst selectOrdersData = createSelector(selectOrdersResult, ordersResult => ordersResult.data);\nexport const {\n  selectAll: selectAllOrders,\n  selectById: selectOrderById,\n  selectIds: selectOrderIds\n} = ordersAdapter.getSelectors(state => {\n  var _selectOrdersData;\n  return (_selectOrdersData = selectOrdersData(state)) !== null && _selectOrdersData !== void 0 ? _selectOrdersData : initialState;\n});","map":{"version":3,"names":["createSelector","createEntityAdapter","apiSlice","ordersAdapter","sortComparer","a","b","id","localeCompare","initialState","getInitialState","ordersApiSlice","injectEndpoints","endpoints","builder","getOrders","query","transformResponse","responseData","setAll","providesTags","type","addOrder","mutation","itemToAdd","url","method","body","invalidatesTags","useGetOrdersQuery","useAddOrderMutation","selectOrdersResult","select","selectOrdersData","ordersResult","data","selectAll","selectAllOrders","selectById","selectOrderById","selectIds","selectOrderIds","getSelectors","state","_selectOrdersData"],"sources":["/Users/viktory456/Documents/WebDev/test tasks/ElifTech IT School RTK Query/medicine_delivery_app/src/features/api/ordersSlice.js"],"sourcesContent":["import {createSelector, createEntityAdapter} from \"@reduxjs/toolkit\"\nimport {apiSlice} from './api'\n\nconst ordersAdapter = createEntityAdapter({sortComparer: (a, b) => a.id.localeCompare(b.id)})\nconst initialState = ordersAdapter.getInitialState()\n\nexport const ordersApiSlice = apiSlice.injectEndpoints({\n       endpoints: builder => ({\n        getOrders: builder.query({\n            query: () => '/orders',\n            transformResponse: responseData => {\n                return ordersAdapter.setAll(initialState, responseData)\n            },\n            providesTags: { type: 'Orders', id: \"LIST\" },\n        }),\n        addOrder: builder.mutation({\n            query: itemToAdd => ({\n                url: '/orders',\n                method: 'POST',\n                body: itemToAdd\n            }),\n            invalidatesTags: [\n                { type: 'Orders', id: \"LIST\" }\n            ]\n        }),\n\n    })\n})\nexport const {\n    useGetOrdersQuery,\n    useAddOrderMutation\n} = ordersApiSlice\n\nexport const selectOrdersResult = ordersApiSlice.endpoints.getOrders.select()\n\nconst selectOrdersData = createSelector(\n    selectOrdersResult,\n    ordersResult => ordersResult.data \n)\n\nexport const {\n    selectAll: selectAllOrders,\n    selectById: selectOrderById,\n    selectIds: selectOrderIds\n} = ordersAdapter.getSelectors(state => selectOrdersData(state) ?? initialState)\n"],"mappings":"AAAA,SAAQA,cAAc,EAAEC,mBAAmB,QAAO,kBAAkB;AACpE,SAAQC,QAAQ,QAAO,OAAO;AAE9B,MAAMC,aAAa,GAAGF,mBAAmB,CAAC;EAACG,YAAY,EAAEA,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACE,EAAE,CAACC,aAAa,CAACF,CAAC,CAACC,EAAE;AAAC,CAAC,CAAC;AAC7F,MAAME,YAAY,GAAGN,aAAa,CAACO,eAAe,CAAC,CAAC;AAEpD,OAAO,MAAMC,cAAc,GAAGT,QAAQ,CAACU,eAAe,CAAC;EAChDC,SAAS,EAAEC,OAAO,KAAK;IACtBC,SAAS,EAAED,OAAO,CAACE,KAAK,CAAC;MACrBA,KAAK,EAAEA,CAAA,KAAM,SAAS;MACtBC,iBAAiB,EAAEC,YAAY,IAAI;QAC/B,OAAOf,aAAa,CAACgB,MAAM,CAACV,YAAY,EAAES,YAAY,CAAC;MAC3D,CAAC;MACDE,YAAY,EAAE;QAAEC,IAAI,EAAE,QAAQ;QAAEd,EAAE,EAAE;MAAO;IAC/C,CAAC,CAAC;IACFe,QAAQ,EAAER,OAAO,CAACS,QAAQ,CAAC;MACvBP,KAAK,EAAEQ,SAAS,KAAK;QACjBC,GAAG,EAAE,SAAS;QACdC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEH;MACV,CAAC,CAAC;MACFI,eAAe,EAAE,CACb;QAAEP,IAAI,EAAE,QAAQ;QAAEd,EAAE,EAAE;MAAO,CAAC;IAEtC,CAAC;EAEL,CAAC;AACL,CAAC,CAAC;AACF,OAAO,MAAM;EACTsB,iBAAiB;EACjBC;AACJ,CAAC,GAAGnB,cAAc;AAElB,OAAO,MAAMoB,kBAAkB,GAAGpB,cAAc,CAACE,SAAS,CAACE,SAAS,CAACiB,MAAM,CAAC,CAAC;AAE7E,MAAMC,gBAAgB,GAAGjC,cAAc,CACnC+B,kBAAkB,EAClBG,YAAY,IAAIA,YAAY,CAACC,IACjC,CAAC;AAED,OAAO,MAAM;EACTC,SAAS,EAAEC,eAAe;EAC1BC,UAAU,EAAEC,eAAe;EAC3BC,SAAS,EAAEC;AACf,CAAC,GAAGtC,aAAa,CAACuC,YAAY,CAACC,KAAK;EAAA,IAAAC,iBAAA;EAAA,QAAAA,iBAAA,GAAIX,gBAAgB,CAACU,KAAK,CAAC,cAAAC,iBAAA,cAAAA,iBAAA,GAAInC,YAAY;AAAA,EAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/viktory456/Documents/WebDev/test tasks/ElifTech IT School/medicine_delivery_app/src/features/drugs/DrugsList.js\",\n  _s = $RefreshSig$();\nimport ShopsList from \"../shops/ShopsList\";\nimport { useGetDrugsShopsQuery, selectDtSById, selectAllDtS } from '../api/drugsToShopsSlice';\nimport { useGetDrugsQuery, useGetDrugsByPriceQuery, selectAllDrugs, selectAllDrugsByPrice } from '../api/drugsSlice';\nimport Drug from \"../drugs/Drug\";\nimport { useMemo, useState, useEffect } from 'react';\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const DrugsList = ({\n  shop\n}) => {\n  _s();\n  const [sortedList, setSortedList] = useState(false);\n  let drugsList;\n  // const { data:drugsShops, isLoading:isLoadingD, isSuccess:isSuccessD} = useGetDrugsShopsQuery(shop)\n  const drugs = useSelector(selectAllDrugs);\n  const drugsShops = useSelector(selectAllDtS);\n  const drugsChosen = drugsShops.filter(item => item.shopId === shop);\n  const sortedDrugs = useMemo(() => {\n    const sortedDrugs = drugs.slice();\n    function comparePrices(a, b) {\n      return a.price - b.price;\n    }\n    sortedDrugs.sort(comparePrices);\n    return sortedDrugs;\n  }, [drugs]);\n  const sortedDrugsChosen = useMemo(() => {\n    const sortedDrugsChosen = drugsChosen.slice();\n    function comparePrices(a, b) {\n      return a.price - b.price;\n    }\n    sortedDrugsChosen.sort(comparePrices);\n    return sortedDrugsChosen;\n  }, [drugsChosen]);\n  useEffect(() => {\n    console.log('useEffect');\n    if (shop === 'default' && sortedList) {\n      drugsList = sortedDrugs.map(drugId => /*#__PURE__*/_jsxDEV(Drug, {\n        drugId: drugId\n      }, drugId.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 45\n      }, this));\n    } else if (shop !== 'default' && !sortedList) {\n      drugsList = drugsChosen === null || drugsChosen === void 0 ? void 0 : drugsChosen.map(drugId => /*#__PURE__*/_jsxDEV(Drug, {\n        drugId: drugId\n      }, drugId.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 46\n      }, this));\n    } else if (shop === 'default' && !sortedList) {\n      drugsList = drugs === null || drugs === void 0 ? void 0 : drugs.map(drugId => /*#__PURE__*/_jsxDEV(Drug, {\n        drugId: drugId\n      }, drugId.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 40\n      }, this));\n      console.log(drugsList);\n    } else {\n      drugsList = sortedDrugsChosen.map(drugId => /*#__PURE__*/_jsxDEV(Drug, {\n        drugId: drugId\n      }, drugId.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 51\n      }, this));\n    }\n  }, [drugsList, sortedList]);\n  const sortByPrice = () => {\n    setSortedList(true);\n  };\n  const resetSorting = () => {\n    setSortedList(false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"drugsMenu\",\n      children: drugsList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"buyButton\",\n      onClick: sortByPrice,\n      children: \"Sort by Price\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"buyButton\",\n      onClick: resetSorting,\n      children: \"Reset Sorting\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(DrugsList, \"2nZhyicpicG/uMwo7s6+z1V+f0o=\", false, function () {\n  return [useSelector, useSelector];\n});\n_c = DrugsList;\nvar _c;\n$RefreshReg$(_c, \"DrugsList\");","map":{"version":3,"names":["ShopsList","useGetDrugsShopsQuery","selectDtSById","selectAllDtS","useGetDrugsQuery","useGetDrugsByPriceQuery","selectAllDrugs","selectAllDrugsByPrice","Drug","useMemo","useState","useEffect","useSelector","jsxDEV","_jsxDEV","Fragment","_Fragment","DrugsList","shop","_s","sortedList","setSortedList","drugsList","drugs","drugsShops","drugsChosen","filter","item","shopId","sortedDrugs","slice","comparePrices","a","b","price","sort","sortedDrugsChosen","console","log","map","drugId","id","fileName","_jsxFileName","lineNumber","columnNumber","sortByPrice","resetSorting","children","className","onClick","_c","$RefreshReg$"],"sources":["/Users/viktory456/Documents/WebDev/test tasks/ElifTech IT School/medicine_delivery_app/src/features/drugs/DrugsList.js"],"sourcesContent":["import ShopsList from \"../shops/ShopsList\"\nimport { useGetDrugsShopsQuery, selectDtSById, selectAllDtS} from '../api/drugsToShopsSlice'\nimport { useGetDrugsQuery, useGetDrugsByPriceQuery, selectAllDrugs, selectAllDrugsByPrice} from '../api/drugsSlice'\nimport Drug from \"../drugs/Drug\"\nimport { useMemo, useState, useEffect } from'react'\nimport { useSelector } from \"react-redux\"\n\nexport const DrugsList = ({shop}) => {\n  const [sortedList, setSortedList] = useState(false)\n  let drugsList;\n  // const { data:drugsShops, isLoading:isLoadingD, isSuccess:isSuccessD} = useGetDrugsShopsQuery(shop)\n  const drugs = useSelector(selectAllDrugs)\n  const drugsShops = useSelector(selectAllDtS)\n  const drugsChosen = drugsShops.filter(item =>item.shopId ===shop);\n  const sortedDrugs = useMemo(() => {\n    const sortedDrugs = drugs.slice()\n    function comparePrices(a, b) {\n      return a.price - b.price;\n    }\n    sortedDrugs.sort(comparePrices)\n    return sortedDrugs\n  }, [drugs])\n  const sortedDrugsChosen = useMemo(() => {\n    const sortedDrugsChosen = drugsChosen.slice()\n    function comparePrices(a, b) {\n      return a.price - b.price;\n    }\n    sortedDrugsChosen.sort(comparePrices)\n    return sortedDrugsChosen\n  }, [drugsChosen])\n  useEffect(() => {\n    console.log('useEffect');\n    if(shop === 'default'&&sortedList){\n      drugsList = sortedDrugs.map(drugId => <Drug drugId={drugId} key={drugId.id} />);\n    }\n    else if (shop !== 'default'&&!sortedList) {\n      drugsList = drugsChosen?.map(drugId => <Drug drugId={drugId} key={drugId.id} />);\n    } else if(shop === 'default'&&!sortedList){\n      drugsList = drugs?.map(drugId => <Drug drugId={drugId} key={drugId.id} />);\n      console.log(drugsList);\n    } else {\n      drugsList = sortedDrugsChosen.map(drugId => <Drug drugId={drugId} key={drugId.id} />);\n    }\n  }, [drugsList, sortedList]);\n\n\n\n  const sortByPrice = () => {\n    setSortedList(true)\n}\nconst resetSorting = () => {\n  setSortedList(false)\n}\n\n  return (\n    <>\n      <div className='drugsMenu'>\n        {/* {sortedList ? sortedDrugsList : drugsList} */}\n        {drugsList}\n      \n      </div>\n      <button className='buyButton' onClick={sortByPrice}>Sort by Price</button>\n      <button className='buyButton' onClick={resetSorting}>Reset Sorting</button>\n    </>\n    )\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
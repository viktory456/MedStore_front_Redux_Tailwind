{"ast":null,"code":"var _jsxFileName = \"/Users/viktory456/Documents/WebDev/test tasks/ElifTech IT School/medicine_delivery_app/src/features/shops/ShopPage.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useGetShopsQuery } from '../api/shopsSlice';\nimport { useGetDrugsToShopsQuery } from '../api/drugsToShopsSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ShopPage = () => {\n  _s();\n  const {\n    shopId\n  } = useParams();\n  const {\n    shop,\n    isLoading: isLoadingShop,\n    isSuccess: isSuccessShop\n  } = useGetShopsQuery('getShops', {\n    selectFromResult: ({\n      data,\n      isLoading,\n      isSuccess\n    }) => ({\n      shop: data === null || data === void 0 ? void 0 : data.entities[shopId],\n      isLoading,\n      isSuccess\n    })\n  });\n  const {\n    data: drugsList,\n    isLoading: isLoadingDtS,\n    isSuccess: isSuccessDtS,\n    isError,\n    error\n  } = useGetDrugsToShopsQuery(shopId);\n  let DrugsToShops;\n  ;\n  if (isLoadingDtS) {\n    DrugsToShops = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\\"Loading...\\\"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 24\n    }, this);\n  } else if (isSuccessDtS) {\n    // DrugsToShops = drugsList.ids.map(id => <p>drugsList.entities[id].shopId</p>)\n    console.log(drugsList);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"shopPage\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: isSuccessShop && shop.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: isSuccessShop && shop.adress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"List of medicines\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(ShopPage, \"cWaRltC/7tBtWrMoFN0Ci+Fz1IU=\", false, function () {\n  return [useParams, useGetShopsQuery, useGetDrugsToShopsQuery];\n});\n_c = ShopPage;\nvar _c;\n$RefreshReg$(_c, \"ShopPage\");","map":{"version":3,"names":["React","useParams","useGetShopsQuery","useGetDrugsToShopsQuery","jsxDEV","_jsxDEV","ShopPage","_s","shopId","shop","isLoading","isLoadingShop","isSuccess","isSuccessShop","selectFromResult","data","entities","drugsList","isLoadingDtS","isSuccessDtS","isError","error","DrugsToShops","children","fileName","_jsxFileName","lineNumber","columnNumber","console","log","className","name","adress","_c","$RefreshReg$"],"sources":["/Users/viktory456/Documents/WebDev/test tasks/ElifTech IT School/medicine_delivery_app/src/features/shops/ShopPage.js"],"sourcesContent":["import React from 'react'\nimport { useParams } from 'react-router-dom'\nimport { useGetShopsQuery } from '../api/shopsSlice'\nimport {useGetDrugsToShopsQuery} from '../api/drugsToShopsSlice'\n\n\nexport const ShopPage = () => {\n    const { shopId } = useParams()\n\n    const { shop, isLoading: isLoadingShop, isSuccess:isSuccessShop } = useGetShopsQuery('getShops', {\n        selectFromResult: ({ data, isLoading, isSuccess }) => ({\n            shop: data?.entities[shopId],\n            isLoading,\n            isSuccess\n        }),\n    })\n\n    const { data:drugsList, isLoading:isLoadingDtS, isSuccess:isSuccessDtS, isError, error } = useGetDrugsToShopsQuery(shopId)\n    \n\n    let DrugsToShops;;\n    if (isLoadingDtS) {\n        DrugsToShops = <p>\"Loading...\"</p>;\n    } else if (isSuccessDtS) {\n        // DrugsToShops = drugsList.ids.map(id => <p>drugsList.entities[id].shopId</p>)\n        console.log(drugsList);\n    } \n\n\n\n  \n    \n  return (\n    <div className='shopPage'>\n        <div>{isSuccessShop && shop.name}</div>\n        <div>{isSuccessShop && shop.adress}</div>\n        <div>List of medicines</div>\n    </div>\n\n  )\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,gBAAgB,QAAQ,mBAAmB;AACpD,SAAQC,uBAAuB,QAAO,0BAA0B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGhE,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM;IAAEC;EAAO,CAAC,GAAGP,SAAS,CAAC,CAAC;EAE9B,MAAM;IAAEQ,IAAI;IAAEC,SAAS,EAAEC,aAAa;IAAEC,SAAS,EAACC;EAAc,CAAC,GAAGX,gBAAgB,CAAC,UAAU,EAAE;IAC7FY,gBAAgB,EAAEA,CAAC;MAAEC,IAAI;MAAEL,SAAS;MAAEE;IAAU,CAAC,MAAM;MACnDH,IAAI,EAAEM,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEC,QAAQ,CAACR,MAAM,CAAC;MAC5BE,SAAS;MACTE;IACJ,CAAC;EACL,CAAC,CAAC;EAEF,MAAM;IAAEG,IAAI,EAACE,SAAS;IAAEP,SAAS,EAACQ,YAAY;IAAEN,SAAS,EAACO,YAAY;IAAEC,OAAO;IAAEC;EAAM,CAAC,GAAGlB,uBAAuB,CAACK,MAAM,CAAC;EAG1H,IAAIc,YAAY;EAAC;EACjB,IAAIJ,YAAY,EAAE;IACdI,YAAY,gBAAGjB,OAAA;MAAAkB,QAAA,EAAG;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EACtC,CAAC,MAAM,IAAIR,YAAY,EAAE;IACrB;IACAS,OAAO,CAACC,GAAG,CAACZ,SAAS,CAAC;EAC1B;EAMF,oBACEZ,OAAA;IAAKyB,SAAS,EAAC,UAAU;IAAAP,QAAA,gBACrBlB,OAAA;MAAAkB,QAAA,EAAMV,aAAa,IAAIJ,IAAI,CAACsB;IAAI;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACvCtB,OAAA;MAAAkB,QAAA,EAAMV,aAAa,IAAIJ,IAAI,CAACuB;IAAM;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACzCtB,OAAA;MAAAkB,QAAA,EAAK;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3B,CAAC;AAGV,CAAC;AAAApB,EAAA,CAlCYD,QAAQ;EAAA,QACEL,SAAS,EAEwCC,gBAAgB,EAQOC,uBAAuB;AAAA;AAAA8B,EAAA,GAXzG3B,QAAQ;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
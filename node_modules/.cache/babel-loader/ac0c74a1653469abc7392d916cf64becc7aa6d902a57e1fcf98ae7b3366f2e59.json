{"ast":null,"code":"import { createSelector, createEntityAdapter } from \"@reduxjs/toolkit\";\nimport { apiSlice } from '../api/api';\nimport { useParams } from 'react-router-dom';\nconst shopsAdapter = createEntityAdapter({\n  sortComparer: (a, b) => b.id.localeCompare(a.id)\n});\nconst initialState = shopsAdapter.getInitialState();\nexport const shopsApiSlice = apiSlice.injectEndpoints({\n  endpoints: builder => ({\n    getShops: builder.query({\n      query: () => '/',\n      transformResponse: responseData => {\n        return shopsAdapter.setAll(initialState, responseData.shops);\n      },\n      providesTags: {\n        type: 'Shop',\n        id: \"LIST\"\n      }\n      // providesTags: (result, error, arg) => [\n      //     {type: 'Shops', id: \"LIST\"},\n      //     ...result.ids.map(({ id }) => ({ type: 'Skills', id }))\n      // ]\n    }),\n    getDrugsToShops: builder.query({\n      query: shopId => `/:${shopId}`,\n      transformResponse: responseData => {\n        const drugsList = responseData.drugsToShops.filter(drug => drug.shopId === shopId);\n        return shopsAdapter.setAll(initialState, responseData);\n      },\n      providesTags: {\n        type: 'DrugsToShops',\n        id: \"LIST\"\n      }\n      // providesTags: (result, error, arg) => [\n      //     {type: 'Shops', id: \"LIST\"},\n      //     ...result.ids.map(({ id }) => ({ type: 'Skills', id }))\n      // ]\n    })\n  })\n});\nexport const {\n  useGetShopsQuery,\n  useGetDrugsToShopsQuery\n  // useDeleteSkillMutation\n} = shopsApiSlice;\n\n// export const selectShopsResult = shopsApiSlice.endpoints.getShops.select()","map":{"version":3,"names":["createSelector","createEntityAdapter","apiSlice","useParams","shopsAdapter","sortComparer","a","b","id","localeCompare","initialState","getInitialState","shopsApiSlice","injectEndpoints","endpoints","builder","getShops","query","transformResponse","responseData","setAll","shops","providesTags","type","getDrugsToShops","shopId","drugsList","drugsToShops","filter","drug","useGetShopsQuery","useGetDrugsToShopsQuery"],"sources":["/Users/viktory456/Documents/WebDev/test tasks/ElifTech IT School/medicine_delivery_app/src/features/api/shopsSlice.js"],"sourcesContent":["import {createSelector, createEntityAdapter} from \"@reduxjs/toolkit\";\nimport {apiSlice} from '../api/api'\nimport { useParams } from 'react-router-dom'\n\nconst shopsAdapter = createEntityAdapter({\n    sortComparer: (a, b) => b.id.localeCompare(a.id)\n})\n\nconst initialState = shopsAdapter.getInitialState()\n\nexport const shopsApiSlice = apiSlice.injectEndpoints({\n       endpoints: builder => ({\n        getShops: builder.query({\n            query: () => '/',\n            transformResponse: responseData => {\n                return shopsAdapter.setAll(initialState, responseData.shops)\n            },\n            providesTags: { type: 'Shop', id: \"LIST\" },\n            // providesTags: (result, error, arg) => [\n            //     {type: 'Shops', id: \"LIST\"},\n            //     ...result.ids.map(({ id }) => ({ type: 'Skills', id }))\n            // ]\n        }),\n        getDrugsToShops: builder.query({\n            query: shopId => `/:${shopId}`,\n            transformResponse: responseData => {\n                const drugsList = responseData.drugsToShops.filter(drug => drug.shopId === shopId)\n                return shopsAdapter.setAll(initialState, responseData)\n            },\n            providesTags: { type: 'DrugsToShops', id: \"LIST\" },\n            // providesTags: (result, error, arg) => [\n            //     {type: 'Shops', id: \"LIST\"},\n            //     ...result.ids.map(({ id }) => ({ type: 'Skills', id }))\n            // ]\n        }),\n    })\n})\nexport const {\n    useGetShopsQuery,\n    useGetDrugsToShopsQuery,\n    // useDeleteSkillMutation\n} = shopsApiSlice\n\n// export const selectShopsResult = shopsApiSlice.endpoints.getShops.select()\n\n"],"mappings":"AAAA,SAAQA,cAAc,EAAEC,mBAAmB,QAAO,kBAAkB;AACpE,SAAQC,QAAQ,QAAO,YAAY;AACnC,SAASC,SAAS,QAAQ,kBAAkB;AAE5C,MAAMC,YAAY,GAAGH,mBAAmB,CAAC;EACrCI,YAAY,EAAEA,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACC,EAAE,CAACC,aAAa,CAACH,CAAC,CAACE,EAAE;AACnD,CAAC,CAAC;AAEF,MAAME,YAAY,GAAGN,YAAY,CAACO,eAAe,CAAC,CAAC;AAEnD,OAAO,MAAMC,aAAa,GAAGV,QAAQ,CAACW,eAAe,CAAC;EAC/CC,SAAS,EAAEC,OAAO,KAAK;IACtBC,QAAQ,EAAED,OAAO,CAACE,KAAK,CAAC;MACpBA,KAAK,EAAEA,CAAA,KAAM,GAAG;MAChBC,iBAAiB,EAAEC,YAAY,IAAI;QAC/B,OAAOf,YAAY,CAACgB,MAAM,CAACV,YAAY,EAAES,YAAY,CAACE,KAAK,CAAC;MAChE,CAAC;MACDC,YAAY,EAAE;QAAEC,IAAI,EAAE,MAAM;QAAEf,EAAE,EAAE;MAAO;MACzC;MACA;MACA;MACA;IACJ,CAAC,CAAC;IACFgB,eAAe,EAAET,OAAO,CAACE,KAAK,CAAC;MAC3BA,KAAK,EAAEQ,MAAM,IAAK,KAAIA,MAAO,EAAC;MAC9BP,iBAAiB,EAAEC,YAAY,IAAI;QAC/B,MAAMO,SAAS,GAAGP,YAAY,CAACQ,YAAY,CAACC,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACJ,MAAM,KAAKA,MAAM,CAAC;QAClF,OAAOrB,YAAY,CAACgB,MAAM,CAACV,YAAY,EAAES,YAAY,CAAC;MAC1D,CAAC;MACDG,YAAY,EAAE;QAAEC,IAAI,EAAE,cAAc;QAAEf,EAAE,EAAE;MAAO;MACjD;MACA;MACA;MACA;IACJ,CAAC;EACL,CAAC;AACL,CAAC,CAAC;AACF,OAAO,MAAM;EACTsB,gBAAgB;EAChBC;EACA;AACJ,CAAC,GAAGnB,aAAa;;AAEjB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
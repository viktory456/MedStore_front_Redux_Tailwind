{"ast":null,"code":"import { createSelector, createEntityAdapter } from \"@reduxjs/toolkit\";\nimport { apiSlice } from './api';\nconst ordersAdapter = createEntityAdapter({\n  sortComparer: (a, b) => b.id.localeCompare(a.id)\n});\nconst initialState = ordersAdapter.getInitialState();\nexport const ordersApiSlice = apiSlice.injectEndpoints({\n  endpoints: builder => ({\n    getOrders: builder.query({\n      query: () => '/orders',\n      transformResponse: responseData => {\n        return ordersAdapter.setAll(initialState, responseData);\n      },\n      providesTags: {\n        type: 'Orders',\n        id: \"LIST\"\n      }\n    }),\n    addOrder: builder.mutation({\n      query: itemToAdd => ({\n        url: '/orders',\n        method: 'POST',\n        body: itemToAdd\n      }),\n      invalidatesTags: [{\n        type: 'Orders',\n        id: \"LIST\"\n      }]\n    }),\n    addFavorite: builder.mutation({\n      query: ({\n        drugId,\n        newFav\n      }) => ({\n        url: `/favorite`,\n        method: 'PUT',\n        body: {\n          drugId,\n          newFav\n        }\n      }),\n      invalidatesTags: (result, error, arg) => [{\n        type: 'Drug',\n        favorite: arg.newFav\n      }]\n    })\n  })\n});\nexport const {\n  useGetOrdersQuery,\n  useAddOrderMutation,\n  useAddFavoriteMutation\n} = ordersApiSlice;","map":{"version":3,"names":["createSelector","createEntityAdapter","apiSlice","ordersAdapter","sortComparer","a","b","id","localeCompare","initialState","getInitialState","ordersApiSlice","injectEndpoints","endpoints","builder","getOrders","query","transformResponse","responseData","setAll","providesTags","type","addOrder","mutation","itemToAdd","url","method","body","invalidatesTags","addFavorite","drugId","newFav","result","error","arg","favorite","useGetOrdersQuery","useAddOrderMutation","useAddFavoriteMutation"],"sources":["/Users/viktory456/Documents/WebDev/test tasks/ElifTech IT School/medicine_delivery_app/src/features/api/ordersSlice.js"],"sourcesContent":["import {createSelector, createEntityAdapter} from \"@reduxjs/toolkit\"\nimport {apiSlice} from './api'\n\n\nconst ordersAdapter = createEntityAdapter({\n    sortComparer: (a, b) => b.id.localeCompare(a.id)\n})\n\nconst initialState = ordersAdapter.getInitialState()\n\nexport const ordersApiSlice = apiSlice.injectEndpoints({\n       endpoints: builder => ({\n        getOrders: builder.query({\n            query: () => '/orders',\n            transformResponse: responseData => {\n                return ordersAdapter.setAll(initialState, responseData)\n            },\n            providesTags: { type: 'Orders', id: \"LIST\" },\n        }),\n        addOrder: builder.mutation({\n            query: itemToAdd => ({\n                url: '/orders',\n                method: 'POST',\n                body: itemToAdd\n            }),\n            invalidatesTags: [\n                { type: 'Orders', id: \"LIST\" }\n            ]\n        }),\n        addFavorite: builder.mutation({\n            query: ({drugId , newFav}) => ({\n                url: `/favorite`,\n                method: 'PUT',\n                body: {drugId, newFav}\n            }),\n            invalidatesTags: (result, error, arg) => [\n                { type: 'Drug', favorite: arg.newFav  }\n            ]\n        }),\n\n    })\n})\nexport const {\n    useGetOrdersQuery,\n    useAddOrderMutation,\n    useAddFavoriteMutation\n} = ordersApiSlice"],"mappings":"AAAA,SAAQA,cAAc,EAAEC,mBAAmB,QAAO,kBAAkB;AACpE,SAAQC,QAAQ,QAAO,OAAO;AAG9B,MAAMC,aAAa,GAAGF,mBAAmB,CAAC;EACtCG,YAAY,EAAEA,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACC,EAAE,CAACC,aAAa,CAACH,CAAC,CAACE,EAAE;AACnD,CAAC,CAAC;AAEF,MAAME,YAAY,GAAGN,aAAa,CAACO,eAAe,CAAC,CAAC;AAEpD,OAAO,MAAMC,cAAc,GAAGT,QAAQ,CAACU,eAAe,CAAC;EAChDC,SAAS,EAAEC,OAAO,KAAK;IACtBC,SAAS,EAAED,OAAO,CAACE,KAAK,CAAC;MACrBA,KAAK,EAAEA,CAAA,KAAM,SAAS;MACtBC,iBAAiB,EAAEC,YAAY,IAAI;QAC/B,OAAOf,aAAa,CAACgB,MAAM,CAACV,YAAY,EAAES,YAAY,CAAC;MAC3D,CAAC;MACDE,YAAY,EAAE;QAAEC,IAAI,EAAE,QAAQ;QAAEd,EAAE,EAAE;MAAO;IAC/C,CAAC,CAAC;IACFe,QAAQ,EAAER,OAAO,CAACS,QAAQ,CAAC;MACvBP,KAAK,EAAEQ,SAAS,KAAK;QACjBC,GAAG,EAAE,SAAS;QACdC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEH;MACV,CAAC,CAAC;MACFI,eAAe,EAAE,CACb;QAAEP,IAAI,EAAE,QAAQ;QAAEd,EAAE,EAAE;MAAO,CAAC;IAEtC,CAAC,CAAC;IACFsB,WAAW,EAAEf,OAAO,CAACS,QAAQ,CAAC;MAC1BP,KAAK,EAAEA,CAAC;QAACc,MAAM;QAAGC;MAAM,CAAC,MAAM;QAC3BN,GAAG,EAAG,WAAU;QAChBC,MAAM,EAAE,KAAK;QACbC,IAAI,EAAE;UAACG,MAAM;UAAEC;QAAM;MACzB,CAAC,CAAC;MACFH,eAAe,EAAEA,CAACI,MAAM,EAAEC,KAAK,EAAEC,GAAG,KAAK,CACrC;QAAEb,IAAI,EAAE,MAAM;QAAEc,QAAQ,EAAED,GAAG,CAACH;MAAQ,CAAC;IAE/C,CAAC;EAEL,CAAC;AACL,CAAC,CAAC;AACF,OAAO,MAAM;EACTK,iBAAiB;EACjBC,mBAAmB;EACnBC;AACJ,CAAC,GAAG3B,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
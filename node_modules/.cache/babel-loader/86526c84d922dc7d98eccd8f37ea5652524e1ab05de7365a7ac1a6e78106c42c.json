{"ast":null,"code":"import { createSelector, createEntityAdapter } from \"@reduxjs/toolkit\";\nimport { apiSlice } from './api';\nimport { quartersInYear } from \"date-fns/constants\";\nconst cartAdapter = createEntityAdapter();\nconst initialState = cartAdapter.getInitialState();\nexport const cartApiSlice = apiSlice.injectEndpoints({\n  endpoints: builder => ({\n    getCart: builder.query({\n      query: () => '/cart',\n      transformResponse: responseData => {\n        return cartAdapter.setAll(initialState, responseData.cart);\n      },\n      providesTags: {\n        type: 'Cart',\n        id: \"LIST\"\n      }\n      // providesTags: (result, error, arg) => [\n      //     {type: 'Cart', id: \"LIST\"},\n      //     ...result.ids.map(({ id }) => ({ type: 'Cart', id }))\n      // ]\n    }),\n    addToCart: builder.mutation({\n      query: itemToAdd => ({\n        url: '/cart',\n        method: 'POST',\n        body: itemToAdd\n      }),\n      invalidatesTags: [{\n        type: 'Cart',\n        id: \"LIST\"\n      }]\n    }),\n    increaseQty: builder.mutation({\n      query: initialItem => ({\n        url: `/cart`,\n        method: 'PUT',\n        body: {\n          ...initialItem,\n          quantity: initialItem.quantity + 1\n        }\n      }),\n      invalidatesTags: (result, error, arg) => [{\n        type: 'Cart',\n        id: arg.id\n      }]\n    }),\n    idecreaseQty: builder.mutation({\n      query: initialItem => ({\n        url: `/cart`,\n        method: 'PUT',\n        body: {\n          ...initialItem,\n          quantity: initialItem.quantity - 1\n        }\n      }),\n      invalidatesTags: (result, error, arg) => [{\n        type: 'Cart',\n        id: arg.id\n      }]\n    }),\n    deleteFromCart: builder.mutation({\n      query: ({\n        id\n      }) => ({\n        url: `/cart`,\n        method: 'DELETE',\n        body: {\n          id\n        }\n      }),\n      invalidatesTags: (result, error, arg) => [{\n        type: 'Cart',\n        id: arg.id\n      }]\n    })\n  })\n});\nexport const {\n  useGetCartQuery,\n  useAddToCartMutation,\n  useDeleteFromCartMutation\n} = cartApiSlice;\n\n// export const selectShopsResult = shopsApiSlice.endpoints.getShops.select()","map":{"version":3,"names":["createSelector","createEntityAdapter","apiSlice","quartersInYear","cartAdapter","initialState","getInitialState","cartApiSlice","injectEndpoints","endpoints","builder","getCart","query","transformResponse","responseData","setAll","cart","providesTags","type","id","addToCart","mutation","itemToAdd","url","method","body","invalidatesTags","increaseQty","initialItem","quantity","result","error","arg","idecreaseQty","deleteFromCart","useGetCartQuery","useAddToCartMutation","useDeleteFromCartMutation"],"sources":["/Users/viktory456/Documents/WebDev/test tasks/ElifTech IT School/medicine_delivery_app/src/features/api/cartSlice.js"],"sourcesContent":["import {createSelector, createEntityAdapter} from \"@reduxjs/toolkit\";\nimport {apiSlice} from './api'\nimport { quartersInYear } from \"date-fns/constants\";\n\nconst cartAdapter = createEntityAdapter()\n\nconst initialState = cartAdapter.getInitialState()\n\nexport const cartApiSlice = apiSlice.injectEndpoints({\n       endpoints: builder => ({\n        getCart: builder.query({\n            query: () => '/cart',\n            transformResponse: responseData => {\n\n                return cartAdapter.setAll(initialState, responseData.cart)\n\n            },\n            providesTags: { type: 'Cart', id: \"LIST\" },\n            // providesTags: (result, error, arg) => [\n            //     {type: 'Cart', id: \"LIST\"},\n            //     ...result.ids.map(({ id }) => ({ type: 'Cart', id }))\n            // ]\n        }),\n        addToCart: builder.mutation({\n            query: itemToAdd => ({\n                url: '/cart',\n                method: 'POST',\n                body: itemToAdd\n            }),\n            invalidatesTags: [\n                { type: 'Cart', id: \"LIST\" }\n            ]\n        }),\n        increaseQty: builder.mutation({\n            query: initialItem => ({\n                url: `/cart`,\n                method: 'PUT',\n                body: {\n                    ...initialItem,\n                    quantity: initialItem.quantity + 1\n                }\n            }),\n            invalidatesTags: (result, error, arg) => [\n                { type: 'Cart', id: arg.id }\n            ]\n        }),\n        idecreaseQty: builder.mutation({\n            query: initialItem => ({\n                url: `/cart`,\n                method: 'PUT',\n                body: {\n                    ...initialItem,\n                    quantity: initialItem.quantity - 1\n                }\n            }),\n            invalidatesTags: (result, error, arg) => [\n                { type: 'Cart', id: arg.id }\n            ]\n        }),\n        deleteFromCart: builder.mutation({\n            query: ({ id }) => ({\n                url: `/cart`,\n                method: 'DELETE',\n                body: { id }\n            }),\n            invalidatesTags: (result, error, arg) => [\n                { type: 'Cart', id: arg.id }\n            ]\n        }),\n    })\n})\nexport const {\n    useGetCartQuery,\n    useAddToCartMutation,\n    useDeleteFromCartMutation\n} = cartApiSlice\n\n// export const selectShopsResult = shopsApiSlice.endpoints.getShops.select()"],"mappings":"AAAA,SAAQA,cAAc,EAAEC,mBAAmB,QAAO,kBAAkB;AACpE,SAAQC,QAAQ,QAAO,OAAO;AAC9B,SAASC,cAAc,QAAQ,oBAAoB;AAEnD,MAAMC,WAAW,GAAGH,mBAAmB,CAAC,CAAC;AAEzC,MAAMI,YAAY,GAAGD,WAAW,CAACE,eAAe,CAAC,CAAC;AAElD,OAAO,MAAMC,YAAY,GAAGL,QAAQ,CAACM,eAAe,CAAC;EAC9CC,SAAS,EAAEC,OAAO,KAAK;IACtBC,OAAO,EAAED,OAAO,CAACE,KAAK,CAAC;MACnBA,KAAK,EAAEA,CAAA,KAAM,OAAO;MACpBC,iBAAiB,EAAEC,YAAY,IAAI;QAE/B,OAAOV,WAAW,CAACW,MAAM,CAACV,YAAY,EAAES,YAAY,CAACE,IAAI,CAAC;MAE9D,CAAC;MACDC,YAAY,EAAE;QAAEC,IAAI,EAAE,MAAM;QAAEC,EAAE,EAAE;MAAO;MACzC;MACA;MACA;MACA;IACJ,CAAC,CAAC;IACFC,SAAS,EAAEV,OAAO,CAACW,QAAQ,CAAC;MACxBT,KAAK,EAAEU,SAAS,KAAK;QACjBC,GAAG,EAAE,OAAO;QACZC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEH;MACV,CAAC,CAAC;MACFI,eAAe,EAAE,CACb;QAAER,IAAI,EAAE,MAAM;QAAEC,EAAE,EAAE;MAAO,CAAC;IAEpC,CAAC,CAAC;IACFQ,WAAW,EAAEjB,OAAO,CAACW,QAAQ,CAAC;MAC1BT,KAAK,EAAEgB,WAAW,KAAK;QACnBL,GAAG,EAAG,OAAM;QACZC,MAAM,EAAE,KAAK;QACbC,IAAI,EAAE;UACF,GAAGG,WAAW;UACdC,QAAQ,EAAED,WAAW,CAACC,QAAQ,GAAG;QACrC;MACJ,CAAC,CAAC;MACFH,eAAe,EAAEA,CAACI,MAAM,EAAEC,KAAK,EAAEC,GAAG,KAAK,CACrC;QAAEd,IAAI,EAAE,MAAM;QAAEC,EAAE,EAAEa,GAAG,CAACb;MAAG,CAAC;IAEpC,CAAC,CAAC;IACFc,YAAY,EAAEvB,OAAO,CAACW,QAAQ,CAAC;MAC3BT,KAAK,EAAEgB,WAAW,KAAK;QACnBL,GAAG,EAAG,OAAM;QACZC,MAAM,EAAE,KAAK;QACbC,IAAI,EAAE;UACF,GAAGG,WAAW;UACdC,QAAQ,EAAED,WAAW,CAACC,QAAQ,GAAG;QACrC;MACJ,CAAC,CAAC;MACFH,eAAe,EAAEA,CAACI,MAAM,EAAEC,KAAK,EAAEC,GAAG,KAAK,CACrC;QAAEd,IAAI,EAAE,MAAM;QAAEC,EAAE,EAAEa,GAAG,CAACb;MAAG,CAAC;IAEpC,CAAC,CAAC;IACFe,cAAc,EAAExB,OAAO,CAACW,QAAQ,CAAC;MAC7BT,KAAK,EAAEA,CAAC;QAAEO;MAAG,CAAC,MAAM;QAChBI,GAAG,EAAG,OAAM;QACZC,MAAM,EAAE,QAAQ;QAChBC,IAAI,EAAE;UAAEN;QAAG;MACf,CAAC,CAAC;MACFO,eAAe,EAAEA,CAACI,MAAM,EAAEC,KAAK,EAAEC,GAAG,KAAK,CACrC;QAAEd,IAAI,EAAE,MAAM;QAAEC,EAAE,EAAEa,GAAG,CAACb;MAAG,CAAC;IAEpC,CAAC;EACL,CAAC;AACL,CAAC,CAAC;AACF,OAAO,MAAM;EACTgB,eAAe;EACfC,oBAAoB;EACpBC;AACJ,CAAC,GAAG9B,YAAY;;AAEhB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/viktory456/Documents/WebDev/test tasks/ElifTech IT School/medicine_delivery_app/src/features/drugs/DrugsList.js\",\n  _s = $RefreshSig$();\nimport ShopsList from \"../shops/ShopsList\";\nimport { useGetDrugsShopsQuery } from '../api/drugsToShopsSlice';\nimport { useGetDrugsQuery } from '../api/drugsSlice';\nimport Drug from \"../drugs/Drug\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DrugsList = shop => {\n  _s();\n  let drugsList;\n  const {\n    data: drugsShops,\n    isLoading: isLoadingD,\n    isSuccess: isSuccessD\n  } = useGetDrugsShopsQuery(shop.shop);\n  let drugsForShop;\n  if (isLoadingD) {\n    drugsForShop = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\\"Loading...\\\"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 20\n    }, this);\n  } else if (isSuccessD) {\n    drugsForShop = drugsShops.ids;\n  }\n  const {\n    data: drugs,\n    isLoading,\n    isSuccess\n  } = useGetDrugsQuery('getDrugs');\n  if (isLoading) {\n    drugsList = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\\"Loading...\\\"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }, this);\n  } else if (isSuccess && isSuccessD) {\n    if (shop.shop === 'default') {\n      drugsList = drugs.ids.map(drugId => /*#__PURE__*/_jsxDEV(Drug, {\n        drugId: drugId\n      }, drugId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 43\n      }, this));\n    } else {\n      drugsList = drugsShops.ids.map(drugId => /*#__PURE__*/_jsxDEV(Drug, {\n        drugId: drugId\n      }, drugId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 48\n      }, this));\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"drugsMenu\",\n    children: drugsList\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(DrugsList, \"DEiAWn1XdcwqsnTZro73lnCbt6M=\", false, function () {\n  return [useGetDrugsShopsQuery, useGetDrugsQuery];\n});\n_c = DrugsList;\nvar _c;\n$RefreshReg$(_c, \"DrugsList\");","map":{"version":3,"names":["ShopsList","useGetDrugsShopsQuery","useGetDrugsQuery","Drug","jsxDEV","_jsxDEV","DrugsList","shop","_s","drugsList","data","drugsShops","isLoading","isLoadingD","isSuccess","isSuccessD","drugsForShop","children","fileName","_jsxFileName","lineNumber","columnNumber","ids","drugs","map","drugId","className","_c","$RefreshReg$"],"sources":["/Users/viktory456/Documents/WebDev/test tasks/ElifTech IT School/medicine_delivery_app/src/features/drugs/DrugsList.js"],"sourcesContent":["import ShopsList from \"../shops/ShopsList\"\nimport { useGetDrugsShopsQuery} from '../api/drugsToShopsSlice'\nimport { useGetDrugsQuery} from '../api/drugsSlice'\nimport Drug from \"../drugs/Drug\"\n\nexport const DrugsList = (shop) => {\n\n  let drugsList;\n  const { data:drugsShops, isLoading:isLoadingD, isSuccess:isSuccessD} = useGetDrugsShopsQuery(shop.shop)\n\n  let drugsForShop;\n  if (isLoadingD) {\n    drugsForShop = <p>\"Loading...\"</p>;\n  } else if (isSuccessD) {\n    drugsForShop = drugsShops.ids;\n  }\n\n  const { data:drugs, isLoading, isSuccess} = useGetDrugsQuery('getDrugs')\n\n  if (isLoading) {\n    drugsList = <p>\"Loading...\"</p>;\n  } else if (isSuccess&&isSuccessD) {\n    if(shop.shop === 'default'){\n      drugsList = drugs.ids.map(drugId => <Drug key={drugId} drugId={drugId}/>);\n    }\n    else{\n      drugsList = drugsShops.ids.map(drugId => <Drug key={drugId} drugId={drugId}/>);\n    }\n  } \n\n  return (\n    <div className='drugsMenu'>\n      {drugsList}\n    </div>\n       )\n}"],"mappings":";;AAAA,OAAOA,SAAS,MAAM,oBAAoB;AAC1C,SAASC,qBAAqB,QAAO,0BAA0B;AAC/D,SAASC,gBAAgB,QAAO,mBAAmB;AACnD,OAAOC,IAAI,MAAM,eAAe;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhC,OAAO,MAAMC,SAAS,GAAIC,IAAI,IAAK;EAAAC,EAAA;EAEjC,IAAIC,SAAS;EACb,MAAM;IAAEC,IAAI,EAACC,UAAU;IAAEC,SAAS,EAACC,UAAU;IAAEC,SAAS,EAACC;EAAU,CAAC,GAAGd,qBAAqB,CAACM,IAAI,CAACA,IAAI,CAAC;EAEvG,IAAIS,YAAY;EAChB,IAAIH,UAAU,EAAE;IACdG,YAAY,gBAAGX,OAAA;MAAAY,QAAA,EAAG;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EACpC,CAAC,MAAM,IAAIN,UAAU,EAAE;IACrBC,YAAY,GAAGL,UAAU,CAACW,GAAG;EAC/B;EAEA,MAAM;IAAEZ,IAAI,EAACa,KAAK;IAAEX,SAAS;IAAEE;EAAS,CAAC,GAAGZ,gBAAgB,CAAC,UAAU,CAAC;EAExE,IAAIU,SAAS,EAAE;IACbH,SAAS,gBAAGJ,OAAA;MAAAY,QAAA,EAAG;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EACjC,CAAC,MAAM,IAAIP,SAAS,IAAEC,UAAU,EAAE;IAChC,IAAGR,IAAI,CAACA,IAAI,KAAK,SAAS,EAAC;MACzBE,SAAS,GAAGc,KAAK,CAACD,GAAG,CAACE,GAAG,CAACC,MAAM,iBAAIpB,OAAA,CAACF,IAAI;QAAcsB,MAAM,EAAEA;MAAO,GAAvBA,MAAM;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAkB,CAAC,CAAC;IAC3E,CAAC,MACG;MACFZ,SAAS,GAAGE,UAAU,CAACW,GAAG,CAACE,GAAG,CAACC,MAAM,iBAAIpB,OAAA,CAACF,IAAI;QAAcsB,MAAM,EAAEA;MAAO,GAAvBA,MAAM;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAkB,CAAC,CAAC;IAChF;EACF;EAEA,oBACEhB,OAAA;IAAKqB,SAAS,EAAC,WAAW;IAAAT,QAAA,EACvBR;EAAS;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV,CAAC;AAAAb,EAAA,CA9BYF,SAAS;EAAA,QAGmDL,qBAAqB,EAShDC,gBAAgB;AAAA;AAAAyB,EAAA,GAZjDrB,SAAS;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
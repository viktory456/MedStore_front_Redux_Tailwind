{"ast":null,"code":"var _jsxFileName = \"/Users/viktory456/Documents/WebDev/test tasks/ElifTech IT School/medicine_delivery_app/src/features/cart/CartItem.js\",\n  _s = $RefreshSig$();\nimport { useGetDrugsQuery } from '../api/drugsSlice';\nimport { useAddToCartMutation } from '../api/cartSlice';\nimport { Buffer } from \"buffer\";\nimport { useState } from 'react';\nimport { useGetShopsQuery } from '../api/shopsSlice';\nimport { useGetCartQuery } from '../api/cartSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartItem = ({\n  cartItem\n}) => {\n  _s();\n  // const [quantity, setQuantity] = useState(1)\n  // const qtyDecrease = () => {\n  //     if (quantity === 1) {\n  //         return;\n  //     }\n  //     setQuantity(quantity - 1)\n  // }\n  // const qtyIncrease = () => setQuantity(quantity + 1)\n\n  // const { drug } = useGetDrugsQuery('getDrugs', {\n  //     selectFromResult: ({ data }) => ({\n  //         drug: data?.entities[drugId]\n  //     }),\n  // })\n  const {\n    itemInCart\n  } = useGetCartQuery('getCart', {\n    selectFromResult: ({\n      data\n    }) => ({\n      itemInCart: data === null || data === void 0 ? void 0 : data.entities[cartItem.name]\n    })\n  });\n  // const base64 = Buffer.from(drug.img.data, \"binary\" ).toString(\"base64\");\n\n  // const idInCart = `${drug.id}${new Date().getTime()}`\n  // const [addToCart, { isLoading }] = useAddToCartMutation()\n\n  // const onAddItemClicked = async () => {\n  //     if (!isLoading) {\n  //         try {\n  //             console.log(drug);\n  //             await addToCart({ id: idInCart, name: drug.name, shop: drug.shop_id, quantity: quantity }).unwrap()\n\n  //             // navigate('/')\n  //         } catch (err) {\n  //             console.error('Failed to add the item', err)\n  //         }\n  //     }\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    className: \"cartItem\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: cartItem.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(CartItem, \"O/NEkvbB5vz1gogXyr/O7v7muVg=\", false, function () {\n  return [useGetCartQuery];\n});\n_c = CartItem;\nexport default CartItem;\nvar _c;\n$RefreshReg$(_c, \"CartItem\");","map":{"version":3,"names":["useGetDrugsQuery","useAddToCartMutation","Buffer","useState","useGetShopsQuery","useGetCartQuery","jsxDEV","_jsxDEV","CartItem","cartItem","_s","itemInCart","selectFromResult","data","entities","name","className","children","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/viktory456/Documents/WebDev/test tasks/ElifTech IT School/medicine_delivery_app/src/features/cart/CartItem.js"],"sourcesContent":["import { useGetDrugsQuery} from '../api/drugsSlice'\nimport {useAddToCartMutation} from '../api/cartSlice'\nimport {Buffer} from \"buffer\" \nimport { useState } from 'react'\nimport { useGetShopsQuery } from '../api/shopsSlice'\nimport { useGetCartQuery } from '../api/cartSlice'\n\n\n\nconst CartItem = ({cartItem}) => {\n\n    // const [quantity, setQuantity] = useState(1)\n    // const qtyDecrease = () => {\n    //     if (quantity === 1) {\n    //         return;\n    //     }\n    //     setQuantity(quantity - 1)\n    // }\n    // const qtyIncrease = () => setQuantity(quantity + 1)\n\n    // const { drug } = useGetDrugsQuery('getDrugs', {\n    //     selectFromResult: ({ data }) => ({\n    //         drug: data?.entities[drugId]\n    //     }),\n    // })\n    const { itemInCart } = useGetCartQuery('getCart', {\n        selectFromResult: ({ data }) => ({\n            itemInCart: data?.entities[cartItem.name]\n        }),\n    })\n    // const base64 = Buffer.from(drug.img.data, \"binary\" ).toString(\"base64\");\n\n    // const idInCart = `${drug.id}${new Date().getTime()}`\n    // const [addToCart, { isLoading }] = useAddToCartMutation()\n\n    // const onAddItemClicked = async () => {\n    //     if (!isLoading) {\n    //         try {\n    //             console.log(drug);\n    //             await addToCart({ id: idInCart, name: drug.name, shop: drug.shop_id, quantity: quantity }).unwrap()\n               \n    //             // navigate('/')\n    //         } catch (err) {\n    //             console.error('Failed to add the item', err)\n    //         }\n    //     }\n    // }\n\n\n  return (\n    <article className='cartItem'>\n        {/* <img className='drugPic' src={`data:image/png;base64,${base64}`}/>\n        <div className='picDescription'>\n            <h2>{drug.name}</h2>\n            <p>{`${drug.price} uah`}</p>\n            <h2>{shop.name}</h2>\n            <div className='qtyCounter'>\n                <button className='qtyButton' onClick={qtyDecrease}>{'-'}</button>\n                <div>{quantity}</div>\n                <button className='qtyButton' onClick={qtyIncrease}>{'+'}</button>\n            </div>\n\n            <button className='buyButton' type=\"button\" onClick={onAddItemClicked}>{'add to Cart'}</button>\n        </div> */}\n\n        <div>{cartItem.id}</div>\n\n    </article>\n  )\n}\n\nexport default CartItem"],"mappings":";;AAAA,SAASA,gBAAgB,QAAO,mBAAmB;AACnD,SAAQC,oBAAoB,QAAO,kBAAkB;AACrD,SAAQC,MAAM,QAAO,QAAQ;AAC7B,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,gBAAgB,QAAQ,mBAAmB;AACpD,SAASC,eAAe,QAAQ,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAIlD,MAAMC,QAAQ,GAAGA,CAAC;EAACC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAE7B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA,MAAM;IAAEC;EAAW,CAAC,GAAGN,eAAe,CAAC,SAAS,EAAE;IAC9CO,gBAAgB,EAAEA,CAAC;MAAEC;IAAK,CAAC,MAAM;MAC7BF,UAAU,EAAEE,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEC,QAAQ,CAACL,QAAQ,CAACM,IAAI;IAC5C,CAAC;EACL,CAAC,CAAC;EACF;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAGF,oBACER,OAAA;IAASS,SAAS,EAAC,UAAU;IAAAC,QAAA,eAezBV,OAAA;MAAAU,QAAA,EAAMR,QAAQ,CAACS;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEnB,CAAC;AAEd,CAAC;AAAAZ,EAAA,CA5DKF,QAAQ;EAAA,QAgBaH,eAAe;AAAA;AAAAkB,EAAA,GAhBpCf,QAAQ;AA8Dd,eAAeA,QAAQ;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
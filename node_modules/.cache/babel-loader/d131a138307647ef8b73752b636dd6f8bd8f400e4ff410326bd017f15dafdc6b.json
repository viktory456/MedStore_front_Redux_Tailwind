{"ast":null,"code":"import { createSelector, createEntityAdapter } from \"@reduxjs/toolkit\";\nimport { apiSlice } from '../api/api';\nimport { useParams } from 'react-router-dom';\nconst drugsToShopsAdapter = createEntityAdapter({\n  sortComparer: (a, b) => b.id.localeCompare(a.id)\n});\nconst initialState = drugsToShopsAdapter.getInitialState();\nexport const drugsToShopsApiSlice = apiSlice.injectEndpoints({\n  endpoints: builder => ({\n    getDrugsToShops: builder.query({\n      query: shopId => `/?shopId=${shopId}`,\n      transformResponse: responseData => {\n        // console.log(shopId, responseData);\n        return drugsToShopsAdapter.setAll(initialState, responseData);\n      },\n      // providesTags: { type: 'DrugsToShops', id: \"LIST\" },\n      providesTags: (result, error, arg) => [...result.ids.map(id => ({\n        type: 'DrugsToShops',\n        id\n      }))]\n    })\n  })\n});\nexport const {\n  useGetDrugsToShopsQuery\n} = drugsToShopsApiSlice;\n\n// export const selectShopsResult = shopsApiSlice.endpoints.getShops.select()","map":{"version":3,"names":["createSelector","createEntityAdapter","apiSlice","useParams","drugsToShopsAdapter","sortComparer","a","b","id","localeCompare","initialState","getInitialState","drugsToShopsApiSlice","injectEndpoints","endpoints","builder","getDrugsToShops","query","shopId","transformResponse","responseData","setAll","providesTags","result","error","arg","ids","map","type","useGetDrugsToShopsQuery"],"sources":["/Users/viktory456/Documents/WebDev/test tasks/ElifTech IT School/medicine_delivery_app/src/features/api/drugsToShops.js"],"sourcesContent":["import {createSelector, createEntityAdapter} from \"@reduxjs/toolkit\";\nimport {apiSlice} from '../api/api'\nimport { useParams } from 'react-router-dom'\n\nconst drugsToShopsAdapter = createEntityAdapter({\n    sortComparer: (a, b) => b.id.localeCompare(a.id)\n})\n\nconst initialState = drugsToShopsAdapter.getInitialState()\n\nexport const drugsToShopsApiSlice = apiSlice.injectEndpoints({\n       endpoints: builder => ({\n        getDrugsToShops: builder.query({\n            query: shopId => `/?shopId=${shopId}`,\n            transformResponse: responseData => {\n                // console.log(shopId, responseData);\n                return drugsToShopsAdapter.setAll(initialState, responseData)\n            },\n            // providesTags: { type: 'DrugsToShops', id: \"LIST\" },\n            providesTags: (result, error, arg) => [\n                ...result.ids.map(id => ({ type: 'DrugsToShops', id }))\n            ]\n        }),\n    })\n})\nexport const {\n    useGetDrugsToShopsQuery,\n} = drugsToShopsApiSlice\n\n// export const selectShopsResult = shopsApiSlice.endpoints.getShops.select()"],"mappings":"AAAA,SAAQA,cAAc,EAAEC,mBAAmB,QAAO,kBAAkB;AACpE,SAAQC,QAAQ,QAAO,YAAY;AACnC,SAASC,SAAS,QAAQ,kBAAkB;AAE5C,MAAMC,mBAAmB,GAAGH,mBAAmB,CAAC;EAC5CI,YAAY,EAAEA,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACC,EAAE,CAACC,aAAa,CAACH,CAAC,CAACE,EAAE;AACnD,CAAC,CAAC;AAEF,MAAME,YAAY,GAAGN,mBAAmB,CAACO,eAAe,CAAC,CAAC;AAE1D,OAAO,MAAMC,oBAAoB,GAAGV,QAAQ,CAACW,eAAe,CAAC;EACtDC,SAAS,EAAEC,OAAO,KAAK;IACtBC,eAAe,EAAED,OAAO,CAACE,KAAK,CAAC;MAC3BA,KAAK,EAAEC,MAAM,IAAK,YAAWA,MAAO,EAAC;MACrCC,iBAAiB,EAAEC,YAAY,IAAI;QAC/B;QACA,OAAOhB,mBAAmB,CAACiB,MAAM,CAACX,YAAY,EAAEU,YAAY,CAAC;MACjE,CAAC;MACD;MACAE,YAAY,EAAEA,CAACC,MAAM,EAAEC,KAAK,EAAEC,GAAG,KAAK,CAClC,GAAGF,MAAM,CAACG,GAAG,CAACC,GAAG,CAACnB,EAAE,KAAK;QAAEoB,IAAI,EAAE,cAAc;QAAEpB;MAAG,CAAC,CAAC,CAAC;IAE/D,CAAC;EACL,CAAC;AACL,CAAC,CAAC;AACF,OAAO,MAAM;EACTqB;AACJ,CAAC,GAAGjB,oBAAoB;;AAExB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
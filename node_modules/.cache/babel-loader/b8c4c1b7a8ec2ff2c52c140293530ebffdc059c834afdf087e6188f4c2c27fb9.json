{"ast":null,"code":"import { createSelector, createEntityAdapter } from \"@reduxjs/toolkit\";\nimport { apiSlice } from './api';\nconst cartAdapter = createEntityAdapter();\nconst initialState = cartAdapter.getInitialState();\nexport const cartApiSlice = apiSlice.injectEndpoints({\n  endpoints: builder => ({\n    getCart: builder.query({\n      query: () => '/cart',\n      transformResponse: responseData => {\n        console.log(responseData);\n        return cartAdapter.setAll(initialState, responseData);\n      },\n      providesTags: {\n        type: 'Cart',\n        id: \"LIST\"\n      }\n      // providesTags: (result, error, arg) => [\n      //     {type: 'Shops', id: \"LIST\"},\n      //     ...result.ids.map(({ id }) => ({ type: 'Skills', id }))\n      // ]\n    }),\n    addToCart: builder.mutation({\n      query: itemToAdd => ({\n        url: '/cart',\n        method: 'POST',\n        body: {\n          ...itemToAdd\n          // id: Number(itemToAdd.id),\n          // name,\n          // shop,\n          // quantity\n        }\n      }),\n      invalidatesTags: [{\n        type: 'Cart',\n        id: \"LIST\"\n      }]\n    })\n  })\n});\nexport const {\n  useGetCartQuery,\n  useAddToCartMutation\n  // useDeleteSkillMutation\n} = cartApiSlice;\n\n// export const selectShopsResult = shopsApiSlice.endpoints.getShops.select()","map":{"version":3,"names":["createSelector","createEntityAdapter","apiSlice","cartAdapter","initialState","getInitialState","cartApiSlice","injectEndpoints","endpoints","builder","getCart","query","transformResponse","responseData","console","log","setAll","providesTags","type","id","addToCart","mutation","itemToAdd","url","method","body","invalidatesTags","useGetCartQuery","useAddToCartMutation"],"sources":["/Users/viktory456/Documents/WebDev/test tasks/ElifTech IT School/medicine_delivery_app/src/features/api/cartSlice.js"],"sourcesContent":["import {createSelector, createEntityAdapter} from \"@reduxjs/toolkit\";\nimport {apiSlice} from './api'\n\nconst cartAdapter = createEntityAdapter()\n\nconst initialState = cartAdapter.getInitialState()\n\nexport const cartApiSlice = apiSlice.injectEndpoints({\n       endpoints: builder => ({\n        getCart: builder.query({\n            query: () => '/cart',\n            transformResponse: responseData => {\n                console.log(responseData);\n                return cartAdapter.setAll(initialState, responseData)\n\n            },\n            providesTags: { type: 'Cart', id: \"LIST\" },\n            // providesTags: (result, error, arg) => [\n            //     {type: 'Shops', id: \"LIST\"},\n            //     ...result.ids.map(({ id }) => ({ type: 'Skills', id }))\n            // ]\n        }),\n        addToCart: builder.mutation({\n            query: itemToAdd => ({\n                url: '/cart',\n                method: 'POST',\n                body: {\n                    ...itemToAdd,\n                    // id: Number(itemToAdd.id),\n                    // name,\n                    // shop,\n                    // quantity\n                }\n            }),\n            invalidatesTags: [\n                { type: 'Cart', id: \"LIST\" }\n            ]\n        }),\n    })\n})\nexport const {\n    useGetCartQuery,\n    useAddToCartMutation,\n    // useDeleteSkillMutation\n} = cartApiSlice\n\n// export const selectShopsResult = shopsApiSlice.endpoints.getShops.select()"],"mappings":"AAAA,SAAQA,cAAc,EAAEC,mBAAmB,QAAO,kBAAkB;AACpE,SAAQC,QAAQ,QAAO,OAAO;AAE9B,MAAMC,WAAW,GAAGF,mBAAmB,CAAC,CAAC;AAEzC,MAAMG,YAAY,GAAGD,WAAW,CAACE,eAAe,CAAC,CAAC;AAElD,OAAO,MAAMC,YAAY,GAAGJ,QAAQ,CAACK,eAAe,CAAC;EAC9CC,SAAS,EAAEC,OAAO,KAAK;IACtBC,OAAO,EAAED,OAAO,CAACE,KAAK,CAAC;MACnBA,KAAK,EAAEA,CAAA,KAAM,OAAO;MACpBC,iBAAiB,EAAEC,YAAY,IAAI;QAC/BC,OAAO,CAACC,GAAG,CAACF,YAAY,CAAC;QACzB,OAAOV,WAAW,CAACa,MAAM,CAACZ,YAAY,EAAES,YAAY,CAAC;MAEzD,CAAC;MACDI,YAAY,EAAE;QAAEC,IAAI,EAAE,MAAM;QAAEC,EAAE,EAAE;MAAO;MACzC;MACA;MACA;MACA;IACJ,CAAC,CAAC;IACFC,SAAS,EAAEX,OAAO,CAACY,QAAQ,CAAC;MACxBV,KAAK,EAAEW,SAAS,KAAK;QACjBC,GAAG,EAAE,OAAO;QACZC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAE;UACF,GAAGH;UACH;UACA;UACA;UACA;QACJ;MACJ,CAAC,CAAC;MACFI,eAAe,EAAE,CACb;QAAER,IAAI,EAAE,MAAM;QAAEC,EAAE,EAAE;MAAO,CAAC;IAEpC,CAAC;EACL,CAAC;AACL,CAAC,CAAC;AACF,OAAO,MAAM;EACTQ,eAAe;EACfC;EACA;AACJ,CAAC,GAAGtB,YAAY;;AAEhB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
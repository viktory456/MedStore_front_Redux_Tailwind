{"ast":null,"code":"var _jsxFileName = \"/Users/viktory456/Documents/WebDev/test tasks/ElifTech IT School/medicine_delivery_app/src/features/drugs/DrugsList.js\",\n  _s = $RefreshSig$();\nimport ShopsList from \"../shops/ShopsList\";\nimport { useGetDrugsShopsQuery } from '../api/drugsToShopsSlice';\nimport { useGetDrugsQuery } from '../api/drugsSlice';\nimport Drug from \"../drugs/Drug\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DrugsList = ({\n  shop\n}) => {\n  _s();\n  let drugsList;\n  const {\n    data: drugsShops,\n    isLoading: isLoadingD,\n    isSuccess: isSuccessD\n  } = useGetDrugsShopsQuery(shop);\n  const {\n    data: drugs,\n    isLoading,\n    isSuccess\n  } = useGetDrugsQuery('getDrugs');\n\n  // let drugsForShop;\n  // if (isLoadingD) {\n  //   drugsForShop = <p>\"Loading...\"</p>;\n  // } else if (isSuccessD) {\n  //   drugsForShop = drugsShops.ids;\n  // }\n\n  const sortedDrugs = drugs.slice();\n  // Sort posts in descending chronological order\n  sortedDrugs.sort((a, b) => b.price.localeCompare(a.price));\n  console.log(sortedDrugs);\n  if (isLoading) {\n    drugsList = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\\"Loading...\\\"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this);\n  } else if (isSuccess && isSuccessD) {\n    if (shop === 'default') {\n      drugsList = drugs.ids.map(drugId => /*#__PURE__*/_jsxDEV(Drug, {\n        drugId: drugId\n      }, drugId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 43\n      }, this));\n    } else {\n      drugsList = drugsShops.ids.map(drugId => /*#__PURE__*/_jsxDEV(Drug, {\n        drugId: drugId\n      }, drugId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 48\n      }, this));\n    }\n  }\n\n  // drugs.ids.map(id=>console.log(drugs.entites[id]))\n  // console.log(drugsList);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"drugsMenu\",\n    children: drugsList\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(DrugsList, \"DEiAWn1XdcwqsnTZro73lnCbt6M=\", false, function () {\n  return [useGetDrugsShopsQuery, useGetDrugsQuery];\n});\n_c = DrugsList;\nvar _c;\n$RefreshReg$(_c, \"DrugsList\");","map":{"version":3,"names":["ShopsList","useGetDrugsShopsQuery","useGetDrugsQuery","Drug","jsxDEV","_jsxDEV","DrugsList","shop","_s","drugsList","data","drugsShops","isLoading","isLoadingD","isSuccess","isSuccessD","drugs","sortedDrugs","slice","sort","a","b","price","localeCompare","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","ids","map","drugId","className","_c","$RefreshReg$"],"sources":["/Users/viktory456/Documents/WebDev/test tasks/ElifTech IT School/medicine_delivery_app/src/features/drugs/DrugsList.js"],"sourcesContent":["import ShopsList from \"../shops/ShopsList\"\nimport { useGetDrugsShopsQuery} from '../api/drugsToShopsSlice'\nimport { useGetDrugsQuery} from '../api/drugsSlice'\nimport Drug from \"../drugs/Drug\"\n\nexport const DrugsList = ({shop}) => {\n\n  let drugsList;\n  const { data:drugsShops, isLoading:isLoadingD, isSuccess:isSuccessD} = useGetDrugsShopsQuery(shop)\n  const { data:drugs, isLoading, isSuccess} = useGetDrugsQuery('getDrugs')\n\n\n  // let drugsForShop;\n  // if (isLoadingD) {\n  //   drugsForShop = <p>\"Loading...\"</p>;\n  // } else if (isSuccessD) {\n  //   drugsForShop = drugsShops.ids;\n  // }\n\n\n    const sortedDrugs = drugs.slice()\n    // Sort posts in descending chronological order\n    sortedDrugs.sort((a, b) => b.price.localeCompare(a.price))\nconsole.log(sortedDrugs);\n\n\n  if (isLoading) {\n    drugsList = <p>\"Loading...\"</p>;\n  } else if (isSuccess&&isSuccessD) {\n    if(shop === 'default'){\n      drugsList = drugs.ids.map(drugId => <Drug key={drugId} drugId={drugId}/>);\n    }\n    else{\n      drugsList = drugsShops.ids.map(drugId => <Drug key={drugId} drugId={drugId}/>);\n    }\n  } \n\n  // drugs.ids.map(id=>console.log(drugs.entites[id]))\n  // console.log(drugsList);\n\n  return (\n    <div className='drugsMenu'>\n      {drugsList}\n    </div>\n       )\n}"],"mappings":";;AAAA,OAAOA,SAAS,MAAM,oBAAoB;AAC1C,SAASC,qBAAqB,QAAO,0BAA0B;AAC/D,SAASC,gBAAgB,QAAO,mBAAmB;AACnD,OAAOC,IAAI,MAAM,eAAe;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhC,OAAO,MAAMC,SAAS,GAAGA,CAAC;EAACC;AAAI,CAAC,KAAK;EAAAC,EAAA;EAEnC,IAAIC,SAAS;EACb,MAAM;IAAEC,IAAI,EAACC,UAAU;IAAEC,SAAS,EAACC,UAAU;IAAEC,SAAS,EAACC;EAAU,CAAC,GAAGd,qBAAqB,CAACM,IAAI,CAAC;EAClG,MAAM;IAAEG,IAAI,EAACM,KAAK;IAAEJ,SAAS;IAAEE;EAAS,CAAC,GAAGZ,gBAAgB,CAAC,UAAU,CAAC;;EAGxE;EACA;EACA;EACA;EACA;EACA;;EAGE,MAAMe,WAAW,GAAGD,KAAK,CAACE,KAAK,CAAC,CAAC;EACjC;EACAD,WAAW,CAACE,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACC,KAAK,CAACC,aAAa,CAACH,CAAC,CAACE,KAAK,CAAC,CAAC;EAC9DE,OAAO,CAACC,GAAG,CAACR,WAAW,CAAC;EAGtB,IAAIL,SAAS,EAAE;IACbH,SAAS,gBAAGJ,OAAA;MAAAqB,QAAA,EAAG;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EACjC,CAAC,MAAM,IAAIhB,SAAS,IAAEC,UAAU,EAAE;IAChC,IAAGR,IAAI,KAAK,SAAS,EAAC;MACpBE,SAAS,GAAGO,KAAK,CAACe,GAAG,CAACC,GAAG,CAACC,MAAM,iBAAI5B,OAAA,CAACF,IAAI;QAAc8B,MAAM,EAAEA;MAAO,GAAvBA,MAAM;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAkB,CAAC,CAAC;IAC3E,CAAC,MACG;MACFrB,SAAS,GAAGE,UAAU,CAACoB,GAAG,CAACC,GAAG,CAACC,MAAM,iBAAI5B,OAAA,CAACF,IAAI;QAAc8B,MAAM,EAAEA;MAAO,GAAvBA,MAAM;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAkB,CAAC,CAAC;IAChF;EACF;;EAEA;EACA;;EAEA,oBACEzB,OAAA;IAAK6B,SAAS,EAAC,WAAW;IAAAR,QAAA,EACvBjB;EAAS;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV,CAAC;AAAAtB,EAAA,CAxCYF,SAAS;EAAA,QAGmDL,qBAAqB,EAChDC,gBAAgB;AAAA;AAAAiC,EAAA,GAJjD7B,SAAS;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"(function (root, factory) {\n  if (root === undefined && window !== undefined) root = window;\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module unless amdModuleId is set\n    define([], function () {\n      return root['jCaptcha'] = factory();\n    });\n  } else if (typeof module === 'object' && module.exports) {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory();\n  } else {\n    root['jCaptcha'] = factory();\n  }\n})(this, function () {\n  \"use strict\";\n\n  {\n    var generateRandomNum = function generateRandomNum() {\n      num1 = Math.round(Math.random() * 8) + 1;\n      num2 = Math.round(Math.random() * 8) + 1;\n      sumNum = num1 + num2;\n    };\n    /**\n     * @param {Object}\n     * @param {Object}\n     * @param {Boolean}\n    */\n\n    var setCaptcha = function setCaptcha($el, options, shouldReset) {\n      if (!shouldReset) {\n        $el.insertAdjacentHTML('beforebegin', \"<canvas class=\\\"\".concat(options.canvasClass, \"\\\"\\n                    width=\\\"\").concat(options.canvasStyle.width, \"\\\" height=\\\"\").concat(options.canvasStyle.height, \"\\\">\\n                </canvas>\\n            \"));\n        this.$captchaEl = document.querySelector(\".\".concat(options.canvasClass));\n        this.$captchaTextContext = this.$captchaEl.getContext('2d');\n        this.$captchaTextContext = Object.assign(this.$captchaTextContext, options.canvasStyle);\n      }\n      this.$captchaTextContext.clearRect(0, 0, options.canvasStyle.width, options.canvasStyle.height);\n      this.$captchaTextContext.fillText(\"\".concat(num1, \" + \").concat(num2, \" \").concat(options.requiredValue), 0, 0);\n    };\n    /**\n     * @param {Object}\n    */\n\n    var jCaptcha = function jCaptcha() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      this.options = Object.assign({}, {\n        el: '.jCaptcha',\n        canvasClass: 'jCaptchaCanvas',\n        requiredValue: '*',\n        resetOnError: true,\n        focusOnError: true,\n        clearOnSubmit: true,\n        callback: null,\n        canvasStyle: {}\n      }, options);\n      this._init();\n    };\n    var sumNum, num1, num2;\n    var numberOfTries = 0;\n    ;\n    jCaptcha.prototype = {\n      _init: function _init() {\n        this.$el = document.querySelector(this.options.el);\n        generateRandomNum();\n        setCaptcha.call(this, this.$el, this.options);\n      },\n      validate: function validate() {\n        numberOfTries++;\n        this.callbackReceived = this.callbackReceived || typeof this.options.callback == 'function';\n        if (this.$el.value != sumNum) {\n          this.callbackReceived && this.options.callback('error', this.$el, numberOfTries);\n          this.options.resetOnError === true && this.reset();\n          this.options.focusOnError === true && this.$el.focus();\n          this.options.clearOnSubmit === true && (this.$el.value = '');\n        } else {\n          this.callbackReceived && this.options.callback('success', this.$el, numberOfTries);\n          this.options.clearOnSubmit === true && (this.$el.value = '');\n        }\n      },\n      reset: function reset() {\n        generateRandomNum();\n        setCaptcha.call(this, this.$el, this.options, true);\n      }\n    };\n  }\n  return jCaptcha;\n});","map":{"version":3,"names":["root","factory","undefined","window","define","amd","module","exports","generateRandomNum","num1","Math","round","random","num2","sumNum","setCaptcha","$el","options","shouldReset","insertAdjacentHTML","concat","canvasClass","canvasStyle","width","height","$captchaEl","document","querySelector","$captchaTextContext","getContext","Object","assign","clearRect","fillText","requiredValue","jCaptcha","arguments","length","el","resetOnError","focusOnError","clearOnSubmit","callback","_init","numberOfTries","prototype","call","validate","callbackReceived","value","reset","focus"],"sources":["/Users/viktory456/Documents/WebDev/test tasks/ElifTech IT School/medicine_delivery_app/node_modules/js-captcha/dist/js/index.js"],"sourcesContent":["(function (root, factory) {\n  if (root === undefined && window !== undefined) root = window;\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module unless amdModuleId is set\n    define([], function () {\n      return (root['jCaptcha'] = factory());\n    });\n  } else if (typeof module === 'object' && module.exports) {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory();\n  } else {\n    root['jCaptcha'] = factory();\n  }\n}(this, function () {\n\n\"use strict\";\n\n{\n  var generateRandomNum = function generateRandomNum() {\n    num1 = Math.round(Math.random() * 8) + 1;\n    num2 = Math.round(Math.random() * 8) + 1;\n    sumNum = num1 + num2;\n  };\n  /**\n   * @param {Object}\n   * @param {Object}\n   * @param {Boolean}\n  */\n\n\n  var setCaptcha = function setCaptcha($el, options, shouldReset) {\n    if (!shouldReset) {\n      $el.insertAdjacentHTML('beforebegin', \"<canvas class=\\\"\".concat(options.canvasClass, \"\\\"\\n                    width=\\\"\").concat(options.canvasStyle.width, \"\\\" height=\\\"\").concat(options.canvasStyle.height, \"\\\">\\n                </canvas>\\n            \"));\n      this.$captchaEl = document.querySelector(\".\".concat(options.canvasClass));\n      this.$captchaTextContext = this.$captchaEl.getContext('2d');\n      this.$captchaTextContext = Object.assign(this.$captchaTextContext, options.canvasStyle);\n    }\n\n    this.$captchaTextContext.clearRect(0, 0, options.canvasStyle.width, options.canvasStyle.height);\n    this.$captchaTextContext.fillText(\"\".concat(num1, \" + \").concat(num2, \" \").concat(options.requiredValue), 0, 0);\n  };\n  /**\n   * @param {Object}\n  */\n\n\n  var jCaptcha = function jCaptcha() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    this.options = Object.assign({}, {\n      el: '.jCaptcha',\n      canvasClass: 'jCaptchaCanvas',\n      requiredValue: '*',\n      resetOnError: true,\n      focusOnError: true,\n      clearOnSubmit: true,\n      callback: null,\n      canvasStyle: {}\n    }, options);\n\n    this._init();\n  };\n\n  var sumNum, num1, num2;\n  var numberOfTries = 0;\n  ;\n  jCaptcha.prototype = {\n    _init: function _init() {\n      this.$el = document.querySelector(this.options.el);\n      generateRandomNum();\n      setCaptcha.call(this, this.$el, this.options);\n    },\n    validate: function validate() {\n      numberOfTries++;\n      this.callbackReceived = this.callbackReceived || typeof this.options.callback == 'function';\n\n      if (this.$el.value != sumNum) {\n        this.callbackReceived && this.options.callback('error', this.$el, numberOfTries);\n        this.options.resetOnError === true && this.reset();\n        this.options.focusOnError === true && this.$el.focus();\n        this.options.clearOnSubmit === true && (this.$el.value = '');\n      } else {\n        this.callbackReceived && this.options.callback('success', this.$el, numberOfTries);\n        this.options.clearOnSubmit === true && (this.$el.value = '');\n      }\n    },\n    reset: function reset() {\n      generateRandomNum();\n      setCaptcha.call(this, this.$el, this.options, true);\n    }\n  };\n}\n\nreturn jCaptcha;\n\n}));\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
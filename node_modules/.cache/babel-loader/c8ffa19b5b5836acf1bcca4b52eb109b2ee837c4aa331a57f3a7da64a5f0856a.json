{"ast":null,"code":"var _jsxFileName = \"/Users/viktory456/Documents/WebDev/test tasks/ElifTech IT School/medicine_delivery_app/src/features/shops/ShopPage.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useGetShopsQuery } from '../api/shopsSlice';\nimport { useGetDrugsToShopsQuery } from '../api/drugsToShopsSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ShopPage = () => {\n  _s();\n  const {\n    shopId\n  } = useParams();\n  const {\n    shop\n  } = useGetShopsQuery('getShops', {\n    selectFromResult: ({\n      data\n    }) => ({\n      shop: data === null || data === void 0 ? void 0 : data.entities[shopId]\n    })\n  });\n  const {\n    data: drugsList,\n    isLoading: isLoadingDtS,\n    isSuccess: isSuccessDtS,\n    isError,\n    error\n  } = useGetDrugsToShopsQuery(shopId);\n  let DrugsToShops;\n  ;\n  if (isLoadingDtS) {\n    DrugsToShops = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\\"Loading...\\\"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 24\n    }, this);\n  } else if (isSuccessDtS) {\n    // DrugsToShops = drugsList.ids.map(id => <p>drugsList.entities[id].shopId</p>)\n    console.log(drugsList);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"shopPage\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\" && shop.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\" && shop.adress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"List of medicines\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(ShopPage, \"7i/iSaMncaq+uUPKTO0kGGlhegY=\", false, function () {\n  return [useParams, useGetShopsQuery, useGetDrugsToShopsQuery];\n});\n_c = ShopPage;\nvar _c;\n$RefreshReg$(_c, \"ShopPage\");","map":{"version":3,"names":["React","useParams","useGetShopsQuery","useGetDrugsToShopsQuery","jsxDEV","_jsxDEV","ShopPage","_s","shopId","shop","selectFromResult","data","entities","drugsList","isLoading","isLoadingDtS","isSuccess","isSuccessDtS","isError","error","DrugsToShops","children","fileName","_jsxFileName","lineNumber","columnNumber","console","log","className","name","adress","_c","$RefreshReg$"],"sources":["/Users/viktory456/Documents/WebDev/test tasks/ElifTech IT School/medicine_delivery_app/src/features/shops/ShopPage.js"],"sourcesContent":["import React from 'react'\nimport { useParams } from 'react-router-dom'\nimport { useGetShopsQuery } from '../api/shopsSlice'\nimport {useGetDrugsToShopsQuery} from '../api/drugsToShopsSlice'\n\n\nexport const ShopPage = () => {\n    const { shopId } = useParams()\n    const { shop } = useGetShopsQuery('getShops', {\n        selectFromResult: ({ data }) => ({\n            shop: data?.entities[shopId]\n        }),\n    })\n    const { data:drugsList, isLoading:isLoadingDtS, isSuccess:isSuccessDtS, isError, error } = useGetDrugsToShopsQuery(shopId)\n    \n\n    let DrugsToShops;;\n    if (isLoadingDtS) {\n        DrugsToShops = <p>\"Loading...\"</p>;\n    } else if (isSuccessDtS) {\n        // DrugsToShops = drugsList.ids.map(id => <p>drugsList.entities[id].shopId</p>)\n        console.log(drugsList);\n    } \n\n\n\n  \n    \n  return (\n    <div className='shopPage'>\n        <div>{\"\" && shop.name}</div>\n        <div>{\"\" &&shop.adress}</div>\n        <div>List of medicines</div>\n    </div>\n\n  )\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,gBAAgB,QAAQ,mBAAmB;AACpD,SAAQC,uBAAuB,QAAO,0BAA0B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGhE,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM;IAAEC;EAAO,CAAC,GAAGP,SAAS,CAAC,CAAC;EAC9B,MAAM;IAAEQ;EAAK,CAAC,GAAGP,gBAAgB,CAAC,UAAU,EAAE;IAC1CQ,gBAAgB,EAAEA,CAAC;MAAEC;IAAK,CAAC,MAAM;MAC7BF,IAAI,EAAEE,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEC,QAAQ,CAACJ,MAAM;IAC/B,CAAC;EACL,CAAC,CAAC;EACF,MAAM;IAAEG,IAAI,EAACE,SAAS;IAAEC,SAAS,EAACC,YAAY;IAAEC,SAAS,EAACC,YAAY;IAAEC,OAAO;IAAEC;EAAM,CAAC,GAAGhB,uBAAuB,CAACK,MAAM,CAAC;EAG1H,IAAIY,YAAY;EAAC;EACjB,IAAIL,YAAY,EAAE;IACdK,YAAY,gBAAGf,OAAA;MAAAgB,QAAA,EAAG;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EACtC,CAAC,MAAM,IAAIR,YAAY,EAAE;IACrB;IACAS,OAAO,CAACC,GAAG,CAACd,SAAS,CAAC;EAC1B;EAMF,oBACER,OAAA;IAAKuB,SAAS,EAAC,UAAU;IAAAP,QAAA,gBACrBhB,OAAA;MAAAgB,QAAA,EAAM,EAAE,IAAIZ,IAAI,CAACoB;IAAI;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAC5BpB,OAAA;MAAAgB,QAAA,EAAM,EAAE,IAAGZ,IAAI,CAACqB;IAAM;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAC7BpB,OAAA;MAAAgB,QAAA,EAAK;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3B,CAAC;AAGV,CAAC;AAAAlB,EAAA,CA9BYD,QAAQ;EAAA,QACEL,SAAS,EACXC,gBAAgB,EAK0DC,uBAAuB;AAAA;AAAA4B,EAAA,GAPzGzB,QAAQ;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { createSelector, createEntityAdapter } from \"@reduxjs/toolkit\";\nimport { apiSlice } from './api';\nimport { useParams } from 'react-router-dom';\nconst drugsToShopsAdapter = createEntityAdapter();\nconst initialState = drugsToShopsAdapter.getInitialState();\nexport const drugsToShopsApiSlice = apiSlice.injectEndpoints({\n  endpoints: builder => ({\n    getDrugsToShops: builder.query({\n      query: () => '/shops',\n      //to use SelectId???\n      transformResponse: responseData => {\n        // let drugsToShop = responseData.filter(drug => drug.shopId === id);\n        // console.log(drugsToShop);\n        console.log(responseData);\n        return drugsToShopsAdapter.setAll(initialState, responseData);\n      },\n      providesTags: {\n        type: 'DrugsToShops',\n        id: \"LIST\"\n      }\n      // providesTags: (result, error, arg) => [\n      //     ...result.ids.map(id => ({ type: 'DrugsToShops', id }))\n      // ]\n    })\n  })\n});\nexport const {\n  useGetDrugsToShopsQuery\n} = drugsToShopsApiSlice;\n\n// export const selectShopsResult = shopsApiSlice.endpoints.getShops.select()","map":{"version":3,"names":["createSelector","createEntityAdapter","apiSlice","useParams","drugsToShopsAdapter","initialState","getInitialState","drugsToShopsApiSlice","injectEndpoints","endpoints","builder","getDrugsToShops","query","transformResponse","responseData","console","log","setAll","providesTags","type","id","useGetDrugsToShopsQuery"],"sources":["/Users/viktory456/Documents/WebDev/test tasks/ElifTech IT School/medicine_delivery_app/src/features/api/drugsToShopsSlice.js"],"sourcesContent":["import {createSelector, createEntityAdapter} from \"@reduxjs/toolkit\";\nimport {apiSlice} from './api'\nimport { useParams } from 'react-router-dom'\n\nconst drugsToShopsAdapter = createEntityAdapter()\n\nconst initialState = drugsToShopsAdapter.getInitialState()\n\nexport const drugsToShopsApiSlice = apiSlice.injectEndpoints({\n       endpoints: builder => ({\n        getDrugsToShops: builder.query({\n            query: () => '/shops', //to use SelectId???\n            transformResponse: responseData => {\n                // let drugsToShop = responseData.filter(drug => drug.shopId === id);\n                // console.log(drugsToShop);\n                console.log(responseData);\n                return drugsToShopsAdapter.setAll(initialState, responseData)\n            },\n            providesTags: { type: 'DrugsToShops', id: \"LIST\" },\n            // providesTags: (result, error, arg) => [\n            //     ...result.ids.map(id => ({ type: 'DrugsToShops', id }))\n            // ]\n        }),\n    })\n})\nexport const {\n    useGetDrugsToShopsQuery,\n} = drugsToShopsApiSlice\n\n// export const selectShopsResult = shopsApiSlice.endpoints.getShops.select()"],"mappings":"AAAA,SAAQA,cAAc,EAAEC,mBAAmB,QAAO,kBAAkB;AACpE,SAAQC,QAAQ,QAAO,OAAO;AAC9B,SAASC,SAAS,QAAQ,kBAAkB;AAE5C,MAAMC,mBAAmB,GAAGH,mBAAmB,CAAC,CAAC;AAEjD,MAAMI,YAAY,GAAGD,mBAAmB,CAACE,eAAe,CAAC,CAAC;AAE1D,OAAO,MAAMC,oBAAoB,GAAGL,QAAQ,CAACM,eAAe,CAAC;EACtDC,SAAS,EAAEC,OAAO,KAAK;IACtBC,eAAe,EAAED,OAAO,CAACE,KAAK,CAAC;MAC3BA,KAAK,EAAEA,CAAA,KAAM,QAAQ;MAAE;MACvBC,iBAAiB,EAAEC,YAAY,IAAI;QAC/B;QACA;QACAC,OAAO,CAACC,GAAG,CAACF,YAAY,CAAC;QACzB,OAAOV,mBAAmB,CAACa,MAAM,CAACZ,YAAY,EAAES,YAAY,CAAC;MACjE,CAAC;MACDI,YAAY,EAAE;QAAEC,IAAI,EAAE,cAAc;QAAEC,EAAE,EAAE;MAAO;MACjD;MACA;MACA;IACJ,CAAC;EACL,CAAC;AACL,CAAC,CAAC;AACF,OAAO,MAAM;EACTC;AACJ,CAAC,GAAGd,oBAAoB;;AAExB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
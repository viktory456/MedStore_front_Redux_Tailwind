{"ast":null,"code":"var _jsxFileName = \"/Users/viktory456/Documents/WebDev/test tasks/ElifTech IT School/medicine_delivery_app/src/features/shops/ShoppingCart.js\",\n  _s2 = $RefreshSig$();\nimport React from 'react';\nimport { useGetCartQuery } from '../api/cartSlice';\nimport CartItem from '../cart/CartItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ShoppingCart = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const {\n    data: cart,\n    isLoading,\n    isSuccess,\n    isError,\n    error\n  } = useGetCartQuery('getCart');\n  let contentCart;\n  if (isLoading) {\n    contentCart = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\\"Loading...\\\"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 19\n    }, this);\n  } else if (isSuccess) {\n    contentCart = cart.ids.map(cartItemId => /*#__PURE__*/_jsxDEV(CartItem, {\n      cartItemId: cartItemId\n    }, cartItemId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 45\n    }, this));\n  }\n  total = _s(cart.ids.map(_s(cartItemId => {\n    _s();\n    const {\n      itemInCart\n    } = useGetCartQuery('getCart', {\n      selectFromResult: ({\n        data\n      }) => ({\n        itemInCart: data === null || data === void 0 ? void 0 : data.entities[cartItemId]\n      })\n    });\n    return itemInCart.price * itemInCart.quantity;\n  }, \"O/NEkvbB5vz1gogXyr/O7v7muVg=\", false, function () {\n    return [useGetCartQuery];\n  })), \"O/NEkvbB5vz1gogXyr/O7v7muVg=\", false, function () {\n    return [useGetCartQuery];\n  });\n\n  // console.log(totalCart);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: contentCart\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s2(ShoppingCart, \"5ko3K+1uEjBNs+n3/TWnTd2u0SQ=\", false, function () {\n  return [useGetCartQuery];\n});\n_c = ShoppingCart;\nexport default ShoppingCart;\nvar _c;\n$RefreshReg$(_c, \"ShoppingCart\");","map":{"version":3,"names":["React","useGetCartQuery","CartItem","jsxDEV","_jsxDEV","Fragment","_Fragment","ShoppingCart","_s2","_s","$RefreshSig$","data","cart","isLoading","isSuccess","isError","error","contentCart","children","fileName","_jsxFileName","lineNumber","columnNumber","ids","map","cartItemId","total","itemInCart","selectFromResult","entities","price","quantity","_c","$RefreshReg$"],"sources":["/Users/viktory456/Documents/WebDev/test tasks/ElifTech IT School/medicine_delivery_app/src/features/shops/ShoppingCart.js"],"sourcesContent":["import React from 'react'\nimport { useGetCartQuery } from '../api/cartSlice'\nimport CartItem from '../cart/CartItem'\n\nconst ShoppingCart = () => {\n\n  const { data:cart, isLoading, isSuccess, isError, error } = useGetCartQuery('getCart')\n\n  let contentCart;\n  if (isLoading) {\n    contentCart = <p>\"Loading...\"</p>;\n  } else if (isSuccess) {\n    contentCart = cart.ids.map(cartItemId=> <CartItem key={cartItemId} cartItemId={cartItemId}/>)\n  } \n  total = cart.ids.map(\n    cartItemId => {\n      const { itemInCart } = useGetCartQuery('getCart', {\n        selectFromResult: ({ data }) => ({\n          itemInCart: data?.entities[cartItemId]\n        }),\n      })\n      return itemInCart.price * itemInCart.quantity\n    }\n  )\n\n  // console.log(totalCart);\n\n  return (\n    <>\n      <div>{contentCart}</div>\n      {/* <div>Total:{totalCart}</div> */}\n    </>\n\n  )\n}\n\nexport default ShoppingCart"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,eAAe,QAAQ,kBAAkB;AAClD,OAAOC,QAAQ,MAAM,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEvC,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAAA,IAAAC,EAAA,GAAAC,YAAA;EAEzB,MAAM;IAAEC,IAAI,EAACC,IAAI;IAAEC,SAAS;IAAEC,SAAS;IAAEC,OAAO;IAAEC;EAAM,CAAC,GAAGf,eAAe,CAAC,SAAS,CAAC;EAEtF,IAAIgB,WAAW;EACf,IAAIJ,SAAS,EAAE;IACbI,WAAW,gBAAGb,OAAA;MAAAc,QAAA,EAAG;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EACnC,CAAC,MAAM,IAAIR,SAAS,EAAE;IACpBG,WAAW,GAAGL,IAAI,CAACW,GAAG,CAACC,GAAG,CAACC,UAAU,iBAAGrB,OAAA,CAACF,QAAQ;MAAkBuB,UAAU,EAAEA;IAAW,GAAnCA,UAAU;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAA0B,CAAC,CAAC;EAC/F;EACAI,KAAK,GAAAjB,EAAA,CAAGG,IAAI,CAACW,GAAG,CAACC,GAAG,CAAAf,EAAA,CAClBgB,UAAU,IAAI;IAAAhB,EAAA;IACZ,MAAM;MAAEkB;IAAW,CAAC,GAAG1B,eAAe,CAAC,SAAS,EAAE;MAChD2B,gBAAgB,EAAEA,CAAC;QAAEjB;MAAK,CAAC,MAAM;QAC/BgB,UAAU,EAAEhB,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEkB,QAAQ,CAACJ,UAAU;MACvC,CAAC;IACH,CAAC,CAAC;IACF,OAAOE,UAAU,CAACG,KAAK,GAAGH,UAAU,CAACI,QAAQ;EAC/C,CAAC;IAAA,QANwB9B,eAAe;EAAA,EAO1C,CAAC;IAAA,QAP0BA,eAAe;EAAA,EAOzC;;EAED;;EAEA,oBACEG,OAAA,CAAAE,SAAA;IAAAY,QAAA,eACEd,OAAA;MAAAc,QAAA,EAAMD;IAAW;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM;EAAC,gBAExB,CAAC;AAGP,CAAC;AAAAd,GAAA,CA9BKD,YAAY;EAAA,QAE4CN,eAAe;AAAA;AAAA+B,EAAA,GAFvEzB,YAAY;AAgClB,eAAeA,YAAY;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/viktory456/Documents/WebDev/test tasks/ElifTech IT School/medicine_delivery_app/src/features/shops/Shop.js\",\n  _s = $RefreshSig$();\nimport { useGetShopsQuery } from '../api/shopsSlice';\nimport { NavLink } from \"react-router-dom\";\nimport { useGetDrugsQuery } from '../api/drugsSlice';\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NavUnlisted = styled.ul`\n\n  // display: flex;\n  padding: 0;\n  // width: 300px;\n  // justify-content: center;\n  // align-items: center;\n  // column-gap: 35px;\n  margin:0;\n\n  a {\n    text-decoration: none;\n  }\n\n  li {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    color: darkslategrey;\n    font-size: 1.3rem;\n    list-style: none;\n    width: 90%;\n    height: 60px;\n    text-align: center;\n    line-height: 100%;\n    border: 1px solid darkslategrey;\n    border-radius: 10px;\n    margin: 20px auto;\n    background-color: white;\n  }\n  li:hover {\n    background-color: antiquewhite;\n    cursor: pointer;\n  }\n`;\n_c = NavUnlisted;\nconst Shop = ({\n  shopId\n}) => {\n  _s();\n  const {\n    shop\n  } = useGetShopsQuery('getShops', {\n    selectFromResult: ({\n      data\n    }) => ({\n      shop: data === null || data === void 0 ? void 0 : data.entities[shopId]\n    })\n  });\n\n  //   const { drugs, isLoading, isSuccess } = useGetDrugsQuery('getDrugs', {\n  //     selectFromResult: ({ data, isLoading, isSuccess }) => ({\n  //         drugs: data?.find((drugs) => drugs.id === shopId),\n  //         isLoading,\n  //         isSuccess\n  //     }),\n  // })\n\n  const {\n    data: drugs,\n    isLoading,\n    isSuccess,\n    isError,\n    error\n  } = useGetDrugsQuery('getDrugs');\n  const renderedUsers = drugs.ids.map(drugId => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: drugs.entities[drugId].name\n  }, drugId, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 7\n  }, this));\n\n  // let drugsList;\n  // if (isLoading) {\n  //   drugsList = <p>\"Loading...\"</p>;\n  // } else if (isSuccess) {\n  //   drugsList = drugs.ids.map(drugId => console.log(drugId));\n  // } \n\n  const filterDrugs = () => {\n    console.log(drugs);\n    //   const { shop } = useGetShopsQuery('getShops', {\n    //     selectFromResult: ({ data }) => ({\n    //         shop: data?.entities[shopId]\n    //     }),\n    // })\n  };\n  return /*#__PURE__*/_jsxDEV(NavUnlisted, {\n    children: /*#__PURE__*/_jsxDEV(NavLink, {\n      to: `${shopId}`,\n      style: ({\n        isActive\n      }) => {\n        return {\n          fontWeight: isActive ? \"bold\" : \"normal\"\n        };\n      },\n      onClick: filterDrugs,\n      children: /*#__PURE__*/_jsxDEV(\"li\", {\n        children: shop.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_s(Shop, \"kNUqJ/As+uR882Crb/az2+i2f+Y=\", false, function () {\n  return [useGetShopsQuery, useGetDrugsQuery];\n});\n_c2 = Shop;\nexport default Shop;\nvar _c, _c2;\n$RefreshReg$(_c, \"NavUnlisted\");\n$RefreshReg$(_c2, \"Shop\");","map":{"version":3,"names":["useGetShopsQuery","NavLink","useGetDrugsQuery","styled","jsxDEV","_jsxDEV","NavUnlisted","ul","_c","Shop","shopId","_s","shop","selectFromResult","data","entities","drugs","isLoading","isSuccess","isError","error","renderedUsers","ids","map","drugId","children","name","fileName","_jsxFileName","lineNumber","columnNumber","filterDrugs","console","log","to","style","isActive","fontWeight","onClick","_c2","$RefreshReg$"],"sources":["/Users/viktory456/Documents/WebDev/test tasks/ElifTech IT School/medicine_delivery_app/src/features/shops/Shop.js"],"sourcesContent":["import { useGetShopsQuery} from '../api/shopsSlice'\nimport { NavLink } from \"react-router-dom\"\nimport { useGetDrugsQuery} from '../api/drugsSlice'\nimport styled from \"styled-components\"\n\nconst NavUnlisted = styled.ul`\n\n  // display: flex;\n  padding: 0;\n  // width: 300px;\n  // justify-content: center;\n  // align-items: center;\n  // column-gap: 35px;\n  margin:0;\n\n  a {\n    text-decoration: none;\n  }\n\n  li {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    color: darkslategrey;\n    font-size: 1.3rem;\n    list-style: none;\n    width: 90%;\n    height: 60px;\n    text-align: center;\n    line-height: 100%;\n    border: 1px solid darkslategrey;\n    border-radius: 10px;\n    margin: 20px auto;\n    background-color: white;\n  }\n  li:hover {\n    background-color: antiquewhite;\n    cursor: pointer;\n  }\n`;\n\n\nconst Shop = ({shopId}) => {\n\n    const { shop } = useGetShopsQuery('getShops', {\n        selectFromResult: ({ data }) => ({\n            shop: data?.entities[shopId]\n        }),\n    })\n\n  //   const { drugs, isLoading, isSuccess } = useGetDrugsQuery('getDrugs', {\n  //     selectFromResult: ({ data, isLoading, isSuccess }) => ({\n  //         drugs: data?.find((drugs) => drugs.id === shopId),\n  //         isLoading,\n  //         isSuccess\n  //     }),\n  // })\n\n\n    const { data:drugs, isLoading, isSuccess, isError, error } = useGetDrugsQuery('getDrugs')\n\n    const renderedUsers = drugs.ids.map(drugId => (\n      <li key={drugId}>\n          {drugs.entities[drugId].name}\n      </li>\n  ))\n\n    // let drugsList;\n    // if (isLoading) {\n    //   drugsList = <p>\"Loading...\"</p>;\n    // } else if (isSuccess) {\n    //   drugsList = drugs.ids.map(drugId => console.log(drugId));\n    // } \n\n    const filterDrugs = () => {\n      console.log(drugs);\n    //   const { shop } = useGetShopsQuery('getShops', {\n    //     selectFromResult: ({ data }) => ({\n    //         shop: data?.entities[shopId]\n    //     }),\n    // })\n    }\n\n  return (\n    <NavUnlisted>\n      <NavLink to={`${shopId}`}\n        style={({ isActive}) => {\n          return {\n            fontWeight: isActive ? \"bold\" : \"normal\",\n          };\n        }}\n        onClick={filterDrugs}\n        ><li>{shop.name}</li></NavLink>\n    </NavUnlisted>\n  )\n}\n\nexport default Shop"],"mappings":";;AAAA,SAASA,gBAAgB,QAAO,mBAAmB;AACnD,SAASC,OAAO,QAAQ,kBAAkB;AAC1C,SAASC,gBAAgB,QAAO,mBAAmB;AACnD,OAAOC,MAAM,MAAM,mBAAmB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,WAAW,GAAGH,MAAM,CAACI,EAAG;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GAnCIF,WAAW;AAsCjB,MAAMG,IAAI,GAAGA,CAAC;EAACC;AAAM,CAAC,KAAK;EAAAC,EAAA;EAEvB,MAAM;IAAEC;EAAK,CAAC,GAAGZ,gBAAgB,CAAC,UAAU,EAAE;IAC1Ca,gBAAgB,EAAEA,CAAC;MAAEC;IAAK,CAAC,MAAM;MAC7BF,IAAI,EAAEE,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEC,QAAQ,CAACL,MAAM;IAC/B,CAAC;EACL,CAAC,CAAC;;EAEJ;EACA;EACA;EACA;EACA;EACA;EACA;;EAGE,MAAM;IAAEI,IAAI,EAACE,KAAK;IAAEC,SAAS;IAAEC,SAAS;IAAEC,OAAO;IAAEC;EAAM,CAAC,GAAGlB,gBAAgB,CAAC,UAAU,CAAC;EAEzF,MAAMmB,aAAa,GAAGL,KAAK,CAACM,GAAG,CAACC,GAAG,CAACC,MAAM,iBACxCnB,OAAA;IAAAoB,QAAA,EACKT,KAAK,CAACD,QAAQ,CAACS,MAAM,CAAC,CAACE;EAAI,GADvBF,MAAM;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEX,CACP,CAAC;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxBC,OAAO,CAACC,GAAG,CAACjB,KAAK,CAAC;IACpB;IACA;IACA;IACA;IACA;EACA,CAAC;EAEH,oBACEX,OAAA,CAACC,WAAW;IAAAmB,QAAA,eACVpB,OAAA,CAACJ,OAAO;MAACiC,EAAE,EAAG,GAAExB,MAAO,EAAE;MACvByB,KAAK,EAAEA,CAAC;QAAEC;MAAQ,CAAC,KAAK;QACtB,OAAO;UACLC,UAAU,EAAED,QAAQ,GAAG,MAAM,GAAG;QAClC,CAAC;MACH,CAAE;MACFE,OAAO,EAAEP,WAAY;MAAAN,QAAA,eACpBpB,OAAA;QAAAoB,QAAA,EAAKb,IAAI,CAACc;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtB,CAAC;AAElB,CAAC;AAAAnB,EAAA,CArDKF,IAAI;EAAA,QAEWT,gBAAgB,EAe4BE,gBAAgB;AAAA;AAAAqC,GAAA,GAjB3E9B,IAAI;AAuDV,eAAeA,IAAI;AAAA,IAAAD,EAAA,EAAA+B,GAAA;AAAAC,YAAA,CAAAhC,EAAA;AAAAgC,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
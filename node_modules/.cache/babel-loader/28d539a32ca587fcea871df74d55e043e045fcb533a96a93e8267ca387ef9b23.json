{"ast":null,"code":"var _jsxFileName = \"/Users/viktory456/Documents/WebDev/test tasks/ElifTech IT School/medicine_delivery_app/src/features/drugs/DrugsList.js\",\n  _s = $RefreshSig$();\nimport ShopsList from \"../shops/ShopsList\";\nimport { useGetDrugsShopsQuery } from '../api/drugsToShopsSlice';\nimport { useGetDrugsQuery } from '../api/drugsSlice';\nimport Drug from \"../drugs/Drug\";\nimport { useMemo } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DrugsList = ({\n  shop\n}) => {\n  _s();\n  let drugsList;\n  const {\n    data: drugsShops,\n    isLoading: isLoadingD,\n    isSuccess: isSuccessD\n  } = useGetDrugsShopsQuery(shop);\n  const {\n    data: drugs,\n    isLoading,\n    isSuccess\n  } = useGetDrugsQuery('getDrugs');\n\n  // let drugsForShop;\n  // if (isLoadingD) {\n  //   drugsForShop = <p>\"Loading...\"</p>;\n  // } else if (isSuccessD) {\n  //   drugsForShop = drugsShops.ids;\n  // }\n\n  if (isLoading) {\n    drugsList = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\\"Loading...\\\"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }, this);\n  } else if (isSuccess && isSuccessD) {\n    if (shop === 'default') {\n      const sortedPosts = useMemo(() => {\n        console.log(drugs);\n        const sortedDrugs = drugs.slice();\n        sortedDrugs.sort((a, b) => a.price.localeCompare(b.price));\n        console.log(sortedDrugs);\n      }, [posts]);\n      drugsList = drugs.ids.map(drugId => /*#__PURE__*/_jsxDEV(Drug, {\n        drugId: drugId\n      }, drugId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 43\n      }, this));\n    } else {\n      drugsList = drugsShops.ids.map(drugId => /*#__PURE__*/_jsxDEV(Drug, {\n        drugId: drugId\n      }, drugId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 48\n      }, this));\n    }\n  }\n\n  // drugs.ids.map(id=>console.log(drugs.entites[id]))\n  // console.log(drugsList);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"drugsMenu\",\n    children: drugsList\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(DrugsList, \"g5yWARJqkCNk/hXqJBilKB53/Hk=\", false, function () {\n  return [useGetDrugsShopsQuery, useGetDrugsQuery];\n});\n_c = DrugsList;\nvar _c;\n$RefreshReg$(_c, \"DrugsList\");","map":{"version":3,"names":["ShopsList","useGetDrugsShopsQuery","useGetDrugsQuery","Drug","useMemo","jsxDEV","_jsxDEV","DrugsList","shop","_s","drugsList","data","drugsShops","isLoading","isLoadingD","isSuccess","isSuccessD","drugs","children","fileName","_jsxFileName","lineNumber","columnNumber","sortedPosts","console","log","sortedDrugs","slice","sort","a","b","price","localeCompare","posts","ids","map","drugId","className","_c","$RefreshReg$"],"sources":["/Users/viktory456/Documents/WebDev/test tasks/ElifTech IT School/medicine_delivery_app/src/features/drugs/DrugsList.js"],"sourcesContent":["import ShopsList from \"../shops/ShopsList\"\nimport { useGetDrugsShopsQuery} from '../api/drugsToShopsSlice'\nimport { useGetDrugsQuery} from '../api/drugsSlice'\nimport Drug from \"../drugs/Drug\"\nimport { useMemo } from'react'\n\nexport const DrugsList = ({shop}) => {\n\n  let drugsList;\n  const { data:drugsShops, isLoading:isLoadingD, isSuccess:isSuccessD} = useGetDrugsShopsQuery(shop)\n  const { data:drugs, isLoading, isSuccess} = useGetDrugsQuery('getDrugs')\n\n\n  // let drugsForShop;\n  // if (isLoadingD) {\n  //   drugsForShop = <p>\"Loading...\"</p>;\n  // } else if (isSuccessD) {\n  //   drugsForShop = drugsShops.ids;\n  // }\n\n\n\n\n  if (isLoading) {\n    drugsList = <p>\"Loading...\"</p>;\n  } else if (isSuccess&&isSuccessD) {\n    if(shop === 'default'){\n      const sortedPosts = useMemo(() => {\n      console.log(drugs);\n      const sortedDrugs = drugs.slice()\n      sortedDrugs.sort((a, b) => a.price.localeCompare(b.price))\n      console.log(sortedDrugs);\n    }, [posts])\n\n      drugsList = drugs.ids.map(drugId => <Drug key={drugId} drugId={drugId}/>);\n    }\n    else{\n      drugsList = drugsShops.ids.map(drugId => <Drug key={drugId} drugId={drugId}/>);\n    }\n  } \n\n  // drugs.ids.map(id=>console.log(drugs.entites[id]))\n  // console.log(drugsList);\n\n  return (\n    <div className='drugsMenu'>\n      {drugsList}\n    </div>\n       )\n}"],"mappings":";;AAAA,OAAOA,SAAS,MAAM,oBAAoB;AAC1C,SAASC,qBAAqB,QAAO,0BAA0B;AAC/D,SAASC,gBAAgB,QAAO,mBAAmB;AACnD,OAAOC,IAAI,MAAM,eAAe;AAChC,SAASC,OAAO,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE9B,OAAO,MAAMC,SAAS,GAAGA,CAAC;EAACC;AAAI,CAAC,KAAK;EAAAC,EAAA;EAEnC,IAAIC,SAAS;EACb,MAAM;IAAEC,IAAI,EAACC,UAAU;IAAEC,SAAS,EAACC,UAAU;IAAEC,SAAS,EAACC;EAAU,CAAC,GAAGf,qBAAqB,CAACO,IAAI,CAAC;EAClG,MAAM;IAAEG,IAAI,EAACM,KAAK;IAAEJ,SAAS;IAAEE;EAAS,CAAC,GAAGb,gBAAgB,CAAC,UAAU,CAAC;;EAGxE;EACA;EACA;EACA;EACA;EACA;;EAKA,IAAIW,SAAS,EAAE;IACbH,SAAS,gBAAGJ,OAAA;MAAAY,QAAA,EAAG;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EACjC,CAAC,MAAM,IAAIP,SAAS,IAAEC,UAAU,EAAE;IAChC,IAAGR,IAAI,KAAK,SAAS,EAAC;MACpB,MAAMe,WAAW,GAAGnB,OAAO,CAAC,MAAM;QAClCoB,OAAO,CAACC,GAAG,CAACR,KAAK,CAAC;QAClB,MAAMS,WAAW,GAAGT,KAAK,CAACU,KAAK,CAAC,CAAC;QACjCD,WAAW,CAACE,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACE,KAAK,CAACC,aAAa,CAACF,CAAC,CAACC,KAAK,CAAC,CAAC;QAC1DP,OAAO,CAACC,GAAG,CAACC,WAAW,CAAC;MAC1B,CAAC,EAAE,CAACO,KAAK,CAAC,CAAC;MAETvB,SAAS,GAAGO,KAAK,CAACiB,GAAG,CAACC,GAAG,CAACC,MAAM,iBAAI9B,OAAA,CAACH,IAAI;QAAciC,MAAM,EAAEA;MAAO,GAAvBA,MAAM;QAAAjB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAkB,CAAC,CAAC;IAC3E,CAAC,MACG;MACFZ,SAAS,GAAGE,UAAU,CAACsB,GAAG,CAACC,GAAG,CAACC,MAAM,iBAAI9B,OAAA,CAACH,IAAI;QAAciC,MAAM,EAAEA;MAAO,GAAvBA,MAAM;QAAAjB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAkB,CAAC,CAAC;IAChF;EACF;;EAEA;EACA;;EAEA,oBACEhB,OAAA;IAAK+B,SAAS,EAAC,WAAW;IAAAnB,QAAA,EACvBR;EAAS;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV,CAAC;AAAAb,EAAA,CA3CYF,SAAS;EAAA,QAGmDN,qBAAqB,EAChDC,gBAAgB;AAAA;AAAAoC,EAAA,GAJjD/B,SAAS;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/viktory456/Documents/WebDev/test tasks/ElifTech IT School/medicine_delivery_app/src/features/shops/Shop.js\",\n  _s = $RefreshSig$();\nimport { useGetShopsQuery } from '../api/shopsSlice';\nimport { NavLink } from \"react-router-dom\";\nimport { useGetDrugsQuery } from '../api/drugsSlice';\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NavUnlisted = styled.ul`\n\n  // display: flex;\n  padding: 0;\n  // width: 300px;\n  // justify-content: center;\n  // align-items: center;\n  // column-gap: 35px;\n  margin:0;\n\n  a {\n    text-decoration: none;\n  }\n\n  li {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    color: darkslategrey;\n    font-size: 1.3rem;\n    list-style: none;\n    width: 90%;\n    height: 60px;\n    text-align: center;\n    line-height: 100%;\n    border: 1px solid darkslategrey;\n    border-radius: 10px;\n    margin: 20px auto;\n    background-color: white;\n  }\n  li:hover {\n    background-color: antiquewhite;\n    cursor: pointer;\n  }\n`;\n_c = NavUnlisted;\nconst Shop = ({\n  shopId\n}) => {\n  _s();\n  const {\n    shop\n  } = useGetShopsQuery('getShops', {\n    selectFromResult: ({\n      data\n    }) => ({\n      shop: data === null || data === void 0 ? void 0 : data.entities[shopId]\n    })\n  });\n  const {\n    data: drugs,\n    isLoading,\n    isSuccess,\n    isError,\n    error\n  } = useGetDrugsQuery('getDrugs');\n  let drugsList;\n  if (isLoading) {\n    drugsList = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\\"Loading...\\\"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 19\n    }, this);\n  } else if (isSuccess) {\n    drugsList = drugs.ids.map(id => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: drugs === null || drugs === void 0 ? void 0 : drugs.entities[id].name\n    }, id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this));\n  }\n\n  // const filterDrugs = async () => {\n\n  // const selectedDrugs = drugsList.entites.filter(drug => drug.shop_id === shop);\n  // const shopDrugs = drugsList.filter(key => drugs.entities[drug\n\n  // await console.log(drugsList);\n  //   const { shop } = useGetShopsQuery('getShops', {\n  //     selectFromResult: ({ data }) => ({\n  //         shop: data?.entities[shopId]\n  //     }),\n  // })\n  // }\n\n  return /*#__PURE__*/_jsxDEV(NavUnlisted, {\n    children: /*#__PURE__*/_jsxDEV(NavLink, {\n      to: `/shops/${shopId}`,\n      style: ({\n        isActive\n      }) => {\n        return {\n          fontWeight: isActive ? \"bold\" : \"normal\"\n        };\n      },\n      filteredDrugs: drugsList\n      // onClick={filterDrugs}\n      ,\n      children: /*#__PURE__*/_jsxDEV(\"li\", {\n        children: shop.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(Shop, \"kNUqJ/As+uR882Crb/az2+i2f+Y=\", false, function () {\n  return [useGetShopsQuery, useGetDrugsQuery];\n});\n_c2 = Shop;\nexport default Shop;\nvar _c, _c2;\n$RefreshReg$(_c, \"NavUnlisted\");\n$RefreshReg$(_c2, \"Shop\");","map":{"version":3,"names":["useGetShopsQuery","NavLink","useGetDrugsQuery","styled","jsxDEV","_jsxDEV","NavUnlisted","ul","_c","Shop","shopId","_s","shop","selectFromResult","data","entities","drugs","isLoading","isSuccess","isError","error","drugsList","children","fileName","_jsxFileName","lineNumber","columnNumber","ids","map","id","name","to","style","isActive","fontWeight","filteredDrugs","_c2","$RefreshReg$"],"sources":["/Users/viktory456/Documents/WebDev/test tasks/ElifTech IT School/medicine_delivery_app/src/features/shops/Shop.js"],"sourcesContent":["import { useGetShopsQuery} from '../api/shopsSlice'\nimport { NavLink } from \"react-router-dom\"\nimport { useGetDrugsQuery} from '../api/drugsSlice'\nimport styled from \"styled-components\"\n\nconst NavUnlisted = styled.ul`\n\n  // display: flex;\n  padding: 0;\n  // width: 300px;\n  // justify-content: center;\n  // align-items: center;\n  // column-gap: 35px;\n  margin:0;\n\n  a {\n    text-decoration: none;\n  }\n\n  li {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    color: darkslategrey;\n    font-size: 1.3rem;\n    list-style: none;\n    width: 90%;\n    height: 60px;\n    text-align: center;\n    line-height: 100%;\n    border: 1px solid darkslategrey;\n    border-radius: 10px;\n    margin: 20px auto;\n    background-color: white;\n  }\n  li:hover {\n    background-color: antiquewhite;\n    cursor: pointer;\n  }\n`;\n\n\nconst Shop = ({shopId}) => {\n\n    const { shop } = useGetShopsQuery('getShops', {\n        selectFromResult: ({ data }) => ({\n            shop: data?.entities[shopId]\n        }),\n    })\n    const { data:drugs, isLoading, isSuccess, isError, error } = useGetDrugsQuery('getDrugs')\n\n    let drugsList;\n    if (isLoading) {\n      drugsList = <p>\"Loading...\"</p>;\n    } else if (isSuccess) {\n      drugsList = drugs.ids.map(id => (\n        <li key={id}>\n          {drugs?.entities[id].name}\n            {/* {drugs.entities[drugId].name}\n            {drugs.entities[drugId].price}\n            {drugs.entities[drugId].available_qty}\n            {drugs.entities[drugId].shop_id} */}\n        </li>\n    ))} \n\n    // const filterDrugs = async () => {\n\n      // const selectedDrugs = drugsList.entites.filter(drug => drug.shop_id === shop);\n      // const shopDrugs = drugsList.filter(key => drugs.entities[drug\n\n      // await console.log(drugsList);\n    //   const { shop } = useGetShopsQuery('getShops', {\n    //     selectFromResult: ({ data }) => ({\n    //         shop: data?.entities[shopId]\n    //     }),\n    // })\n    // }\n\n  return (\n    <NavUnlisted>\n      <NavLink to={`/shops/${shopId}`}\n        style={({ isActive}) => {\n          return {\n            fontWeight: isActive ? \"bold\" : \"normal\",\n          };\n        }}\n        filteredDrugs={drugsList}\n        // onClick={filterDrugs}\n        ><li>{shop.name}</li></NavLink>\n    </NavUnlisted>\n  )\n}\n\nexport default Shop"],"mappings":";;AAAA,SAASA,gBAAgB,QAAO,mBAAmB;AACnD,SAASC,OAAO,QAAQ,kBAAkB;AAC1C,SAASC,gBAAgB,QAAO,mBAAmB;AACnD,OAAOC,MAAM,MAAM,mBAAmB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,WAAW,GAAGH,MAAM,CAACI,EAAG;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GAnCIF,WAAW;AAsCjB,MAAMG,IAAI,GAAGA,CAAC;EAACC;AAAM,CAAC,KAAK;EAAAC,EAAA;EAEvB,MAAM;IAAEC;EAAK,CAAC,GAAGZ,gBAAgB,CAAC,UAAU,EAAE;IAC1Ca,gBAAgB,EAAEA,CAAC;MAAEC;IAAK,CAAC,MAAM;MAC7BF,IAAI,EAAEE,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEC,QAAQ,CAACL,MAAM;IAC/B,CAAC;EACL,CAAC,CAAC;EACF,MAAM;IAAEI,IAAI,EAACE,KAAK;IAAEC,SAAS;IAAEC,SAAS;IAAEC,OAAO;IAAEC;EAAM,CAAC,GAAGlB,gBAAgB,CAAC,UAAU,CAAC;EAEzF,IAAImB,SAAS;EACb,IAAIJ,SAAS,EAAE;IACbI,SAAS,gBAAGhB,OAAA;MAAAiB,QAAA,EAAG;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EACjC,CAAC,MAAM,IAAIR,SAAS,EAAE;IACpBG,SAAS,GAAGL,KAAK,CAACW,GAAG,CAACC,GAAG,CAACC,EAAE,iBAC1BxB,OAAA;MAAAiB,QAAA,EACGN,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAED,QAAQ,CAACc,EAAE,CAAC,CAACC;IAAI,GADlBD,EAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAMP,CACP,CAAC;EAAA;;EAEF;;EAEE;EACA;;EAEA;EACF;EACA;EACA;EACA;EACA;EACA;;EAEF,oBACErB,OAAA,CAACC,WAAW;IAAAgB,QAAA,eACVjB,OAAA,CAACJ,OAAO;MAAC8B,EAAE,EAAG,UAASrB,MAAO,EAAE;MAC9BsB,KAAK,EAAEA,CAAC;QAAEC;MAAQ,CAAC,KAAK;QACtB,OAAO;UACLC,UAAU,EAAED,QAAQ,GAAG,MAAM,GAAG;QAClC,CAAC;MACH,CAAE;MACFE,aAAa,EAAEd;MACf;MAAA;MAAAC,QAAA,eACCjB,OAAA;QAAAiB,QAAA,EAAKV,IAAI,CAACkB;MAAI;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtB,CAAC;AAElB,CAAC;AAAAf,EAAA,CAjDKF,IAAI;EAAA,QAEWT,gBAAgB,EAK4BE,gBAAgB;AAAA;AAAAkC,GAAA,GAP3E3B,IAAI;AAmDV,eAAeA,IAAI;AAAA,IAAAD,EAAA,EAAA4B,GAAA;AAAAC,YAAA,CAAA7B,EAAA;AAAA6B,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}